/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.PaymentFrequency;
import com.unchartedpartners.databases.enums.SubscriptionQuoteStatus;
import com.unchartedpartners.databases.tables.SubscriptionQuote;
import com.unchartedpartners.databases.tables.records.SubscriptionQuoteRecord;

import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseSubscriptionQuoteDao")
@ConditionalOnMissingBean(name="subscriptionQuoteDao")
public class SubscriptionQuoteDao extends BaseDaoImpl<SubscriptionQuoteRecord, com.unchartedpartners.databases.tables.pojos.SubscriptionQuote, Long> {

    /**
     * Create a new SubscriptionQuoteDao without any configuration
     */
    public SubscriptionQuoteDao() {
        super(SubscriptionQuote.SUBSCRIPTION_QUOTE, com.unchartedpartners.databases.tables.pojos.SubscriptionQuote.class);
    }

    /**
     * Create a new SubscriptionQuoteDao with an attached configuration
     */
    public SubscriptionQuoteDao(Configuration configuration) {
        super(SubscriptionQuote.SUBSCRIPTION_QUOTE, com.unchartedpartners.databases.tables.pojos.SubscriptionQuote.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.SubscriptionQuote object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchById(Long... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.SubscriptionQuote fetchOneById(Long value) {
        return fetchOne(SubscriptionQuote.SUBSCRIPTION_QUOTE.ID, value);
    }

    /**
     * Fetch records that have <code>quotation_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByQuotationNo(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.QUOTATION_NO, values);
    }

    /**
     * Fetch records that have <code>contract_code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByContractCode(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CONTRACT_CODE, values);
    }

    /**
     * Fetch records that have <code>contract_ref_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByContractRefNo(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CONTRACT_REF_NO, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByName(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.NAME, values);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByAccountId(Long... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>product_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByProductId(Long... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.PRODUCT_ID, values);
    }

    /**
     * Fetch records that have <code>product_code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByProductCode(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.PRODUCT_CODE, values);
    }

    /**
     * Fetch records that have <code>product_version IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByProductVersion(Long... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.PRODUCT_VERSION, values);
    }

    /**
     * Fetch records that have <code>plan_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByPlanNo(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.PLAN_NO, values);
    }

    /**
     * Fetch records that have <code>customer_data IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByCustomerData(Map... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CUSTOMER_DATA, values);
    }

    /**
     * Fetch records that have <code>quote_data IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByQuoteData(Map... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.QUOTE_DATA, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByStatus(SubscriptionQuoteStatus... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.STATUS, values);
    }

    /**
     * Fetch records that have <code>payment_frequency IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByPaymentFrequency(PaymentFrequency... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.PAYMENT_FREQUENCY, values);
    }

    /**
     * Fetch records that have <code>consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByConsent(Boolean... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CONSENT, values);
    }

    /**
     * Fetch records that have <code>subscription_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchBySubscriptionDate(Timestamp... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.SUBSCRIPTION_DATE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByDeleted(Boolean... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByCreatedBy(Long... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByCreated(Timestamp... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByUpdatedBy(Long... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByUpdated(Timestamp... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.UPDATED, values);
    }

    /**
     * Fetch records that have <code>customer_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionQuote> fetchByCustomerNo(String... values) {
        return fetch(SubscriptionQuote.SUBSCRIPTION_QUOTE.CUSTOMER_NO, values);
    }
}
