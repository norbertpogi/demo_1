/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.GaZatrpfRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaZatrpf extends TableImpl<GaZatrpfRecord> {

    private static final long serialVersionUID = -969659308;

    /**
     * The reference instance of <code>intest.ga_zatrpf</code>
     */
    public static final GaZatrpf GA_ZATRPF = new GaZatrpf();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaZatrpfRecord> getRecordType() {
        return GaZatrpfRecord.class;
    }

    /**
     * The column <code>intest.ga_zatrpf.id</code>.
     */
    public final TableField<GaZatrpfRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.ga_zatrpf_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.ga_zatrpf.agntcoy</code>.
     */
    public final TableField<GaZatrpfRecord, String> AGNTCOY = createField("agntcoy", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_zatrpf.agntnum</code>.
     */
    public final TableField<GaZatrpfRecord, String> AGNTNUM = createField("agntnum", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_zatrpf.zagedcd</code>.
     */
    public final TableField<GaZatrpfRecord, String> ZAGEDCD = createField("zagedcd", org.jooq.impl.SQLDataType.VARCHAR(6), this, "");

    /**
     * The column <code>intest.ga_zatrpf.zageddt</code>.
     */
    public final TableField<GaZatrpfRecord, Integer> ZAGEDDT = createField("zageddt", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_zatrpf.zagedsf</code>.
     */
    public final TableField<GaZatrpfRecord, String> ZAGEDSF = createField("zagedsf", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_zatrpf.zagedrs</code>.
     */
    public final TableField<GaZatrpfRecord, String> ZAGEDRS = createField("zagedrs", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>intest.ga_zatrpf.termid</code>.
     */
    public final TableField<GaZatrpfRecord, String> TERMID = createField("termid", org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>intest.ga_zatrpf.user</code>.
     */
    public final TableField<GaZatrpfRecord, Integer> USER = createField("user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_zatrpf.transaction_date</code>.
     */
    public final TableField<GaZatrpfRecord, Integer> TRANSACTION_DATE = createField("transaction_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_zatrpf.transaction_time</code>.
     */
    public final TableField<GaZatrpfRecord, Integer> TRANSACTION_TIME = createField("transaction_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_zatrpf.user_profile</code>.
     */
    public final TableField<GaZatrpfRecord, String> USER_PROFILE = createField("user_profile", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_zatrpf.job_name</code>.
     */
    public final TableField<GaZatrpfRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_zatrpf.datime</code>.
     */
    public final TableField<GaZatrpfRecord, Timestamp> DATIME = createField("datime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.ga_zatrpf.rrn</code>.
     */
    public final TableField<GaZatrpfRecord, Long> RRN = createField("rrn", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>intest.ga_zatrpf.eb_timestamp</code>.
     */
    public final TableField<GaZatrpfRecord, Timestamp> EB_TIMESTAMP = createField("eb_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>intest.ga_zatrpf</code> table reference
     */
    public GaZatrpf() {
        this(DSL.name("ga_zatrpf"), null);
    }

    /**
     * Create an aliased <code>intest.ga_zatrpf</code> table reference
     */
    public GaZatrpf(String alias) {
        this(DSL.name(alias), GA_ZATRPF);
    }

    /**
     * Create an aliased <code>intest.ga_zatrpf</code> table reference
     */
    public GaZatrpf(Name alias) {
        this(alias, GA_ZATRPF);
    }

    private GaZatrpf(Name alias, Table<GaZatrpfRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaZatrpf(Name alias, Table<GaZatrpfRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GA_ZATRPF_IND, Indexes.GA_ZATRPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GaZatrpfRecord, Long> getIdentity() {
        return Keys.IDENTITY_GA_ZATRPF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaZatrpfRecord> getPrimaryKey() {
        return Keys.GA_ZATRPF_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaZatrpfRecord>> getKeys() {
        return Arrays.<UniqueKey<GaZatrpfRecord>>asList(Keys.GA_ZATRPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaZatrpf as(String alias) {
        return new GaZatrpf(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaZatrpf as(Name alias) {
        return new GaZatrpf(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaZatrpf rename(String name) {
        return new GaZatrpf(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaZatrpf rename(Name name) {
        return new GaZatrpf(name, null);
    }
}
