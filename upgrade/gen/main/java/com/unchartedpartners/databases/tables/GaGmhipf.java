/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.GaGmhipfRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaGmhipf extends TableImpl<GaGmhipfRecord> {

    private static final long serialVersionUID = 981210844;

    /**
     * The reference instance of <code>intest.ga_gmhipf</code>
     */
    public static final GaGmhipf GA_GMHIPF = new GaGmhipf();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaGmhipfRecord> getRecordType() {
        return GaGmhipfRecord.class;
    }

    /**
     * The column <code>intest.ga_gmhipf.id</code>.
     */
    public final TableField<GaGmhipfRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.ga_gmhipf_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.ga_gmhipf.chdrcoy</code>.
     */
    public final TableField<GaGmhipfRecord, String> CHDRCOY = createField("chdrcoy", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gmhipf.chdrnum</code>.
     */
    public final TableField<GaGmhipfRecord, String> CHDRNUM = createField("chdrnum", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_gmhipf.mbrno</code>.
     */
    public final TableField<GaGmhipfRecord, String> MBRNO = createField("mbrno", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>intest.ga_gmhipf.effdate</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> EFFDATE = createField("effdate", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.dtetrm</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> DTETRM = createField("dtetrm", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.subscoy</code>.
     */
    public final TableField<GaGmhipfRecord, String> SUBSCOY = createField("subscoy", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gmhipf.subsnum</code>.
     */
    public final TableField<GaGmhipfRecord, String> SUBSNUM = createField("subsnum", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_gmhipf.occpcode</code>.
     */
    public final TableField<GaGmhipfRecord, String> OCCPCODE = createField("occpcode", org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>intest.ga_gmhipf.salary</code>.
     */
    public final TableField<GaGmhipfRecord, BigDecimal> SALARY = createField("salary", org.jooq.impl.SQLDataType.NUMERIC(11, 2), this, "");

    /**
     * The column <code>intest.ga_gmhipf.dteapp</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> DTEAPP = createField("dteapp", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.sbstdl</code>.
     */
    public final TableField<GaGmhipfRecord, String> SBSTDL = createField("sbstdl", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gmhipf.termid</code>.
     */
    public final TableField<GaGmhipfRecord, String> TERMID = createField("termid", org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>intest.ga_gmhipf.user</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> USER = createField("user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.transaction_date</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> TRANSACTION_DATE = createField("transaction_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.transaction_time</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> TRANSACTION_TIME = createField("transaction_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.tranno</code>.
     */
    public final TableField<GaGmhipfRecord, Integer> TRANNO = createField("tranno", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gmhipf.fupflg</code>.
     */
    public final TableField<GaGmhipfRecord, String> FUPFLG = createField("fupflg", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gmhipf.dpntno</code>.
     */
    public final TableField<GaGmhipfRecord, String> DPNTNO = createField("dpntno", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>intest.ga_gmhipf.client</code>.
     */
    public final TableField<GaGmhipfRecord, String> CLIENT = createField("client", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_gmhipf.personcov</code>.
     */
    public final TableField<GaGmhipfRecord, String> PERSONCOV = createField("personcov", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gmhipf.mlvlplan</code>.
     */
    public final TableField<GaGmhipfRecord, String> MLVLPLAN = createField("mlvlplan", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>intest.ga_gmhipf.clntcoy</code>.
     */
    public final TableField<GaGmhipfRecord, String> CLNTCOY = createField("clntcoy", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gmhipf.pccclnt</code>.
     */
    public final TableField<GaGmhipfRecord, String> PCCCLNT = createField("pccclnt", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_gmhipf.apccclnt</code>.
     */
    public final TableField<GaGmhipfRecord, String> APCCCLNT = createField("apccclnt", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_gmhipf.earning</code>.
     */
    public final TableField<GaGmhipfRecord, BigDecimal> EARNING = createField("earning", org.jooq.impl.SQLDataType.NUMERIC(11, 2), this, "");

    /**
     * The column <code>intest.ga_gmhipf.ctbprcnt</code>.
     */
    public final TableField<GaGmhipfRecord, BigDecimal> CTBPRCNT = createField("ctbprcnt", org.jooq.impl.SQLDataType.NUMERIC(5, 2), this, "");

    /**
     * The column <code>intest.ga_gmhipf.ctbamt</code>.
     */
    public final TableField<GaGmhipfRecord, BigDecimal> CTBAMT = createField("ctbamt", org.jooq.impl.SQLDataType.NUMERIC(10, 2), this, "");

    /**
     * The column <code>intest.ga_gmhipf.user_profile</code>.
     */
    public final TableField<GaGmhipfRecord, String> USER_PROFILE = createField("user_profile", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_gmhipf.job_name</code>.
     */
    public final TableField<GaGmhipfRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_gmhipf.datime</code>.
     */
    public final TableField<GaGmhipfRecord, Timestamp> DATIME = createField("datime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.ga_gmhipf.eb_timestamp</code>.
     */
    public final TableField<GaGmhipfRecord, Timestamp> EB_TIMESTAMP = createField("eb_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>intest.ga_gmhipf</code> table reference
     */
    public GaGmhipf() {
        this(DSL.name("ga_gmhipf"), null);
    }

    /**
     * Create an aliased <code>intest.ga_gmhipf</code> table reference
     */
    public GaGmhipf(String alias) {
        this(DSL.name(alias), GA_GMHIPF);
    }

    /**
     * Create an aliased <code>intest.ga_gmhipf</code> table reference
     */
    public GaGmhipf(Name alias) {
        this(alias, GA_GMHIPF);
    }

    private GaGmhipf(Name alias, Table<GaGmhipfRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaGmhipf(Name alias, Table<GaGmhipfRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GA_GMHIPF_IND, Indexes.GA_GMHIPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GaGmhipfRecord, Long> getIdentity() {
        return Keys.IDENTITY_GA_GMHIPF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaGmhipfRecord> getPrimaryKey() {
        return Keys.GA_GMHIPF_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaGmhipfRecord>> getKeys() {
        return Arrays.<UniqueKey<GaGmhipfRecord>>asList(Keys.GA_GMHIPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaGmhipf as(String alias) {
        return new GaGmhipf(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaGmhipf as(Name alias) {
        return new GaGmhipf(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaGmhipf rename(String name) {
        return new GaGmhipf(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaGmhipf rename(Name name) {
        return new GaGmhipf(name, null);
    }
}
