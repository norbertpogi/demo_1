/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.tables.SubscriptionFile;
import com.unchartedpartners.databases.tables.records.SubscriptionFileRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseSubscriptionFileDao")
@ConditionalOnMissingBean(name="subscriptionFileDao")
public class SubscriptionFileDao extends BaseDaoImpl<SubscriptionFileRecord, com.unchartedpartners.databases.tables.pojos.SubscriptionFile, Long> {

    /**
     * Create a new SubscriptionFileDao without any configuration
     */
    public SubscriptionFileDao() {
        super(SubscriptionFile.SUBSCRIPTION_FILE, com.unchartedpartners.databases.tables.pojos.SubscriptionFile.class);
    }

    /**
     * Create a new SubscriptionFileDao with an attached configuration
     */
    public SubscriptionFileDao(Configuration configuration) {
        super(SubscriptionFile.SUBSCRIPTION_FILE, com.unchartedpartners.databases.tables.pojos.SubscriptionFile.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.SubscriptionFile object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchById(Long... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.SubscriptionFile fetchOneById(Long value) {
        return fetchOne(SubscriptionFile.SUBSCRIPTION_FILE.ID, value);
    }

    /**
     * Fetch records that have <code>subscription_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchBySubscriptionId(Long... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.SUBSCRIPTION_ID, values);
    }

    /**
     * Fetch records that have <code>data_file_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchByDataFileId(Long... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.DATA_FILE_ID, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchByDeleted(Boolean... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchByCreatedBy(Long... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchByCreated(Timestamp... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchByUpdatedBy(Long... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.SubscriptionFile> fetchByUpdated(Timestamp... values) {
        return fetch(SubscriptionFile.SUBSCRIPTION_FILE.UPDATED, values);
    }
}
