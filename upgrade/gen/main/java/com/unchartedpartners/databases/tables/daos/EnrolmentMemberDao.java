/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.PersonType;
import com.unchartedpartners.databases.enums.UnderwritingStatus;
import com.unchartedpartners.databases.tables.EnrolmentMember;
import com.unchartedpartners.databases.tables.records.EnrolmentMemberRecord;

import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseEnrolmentMemberDao")
@ConditionalOnMissingBean(name="enrolmentMemberDao")
public class EnrolmentMemberDao extends BaseDaoImpl<EnrolmentMemberRecord, com.unchartedpartners.databases.tables.pojos.EnrolmentMember, Long> {

    /**
     * Create a new EnrolmentMemberDao without any configuration
     */
    public EnrolmentMemberDao() {
        super(EnrolmentMember.ENROLMENT_MEMBER, com.unchartedpartners.databases.tables.pojos.EnrolmentMember.class);
    }

    /**
     * Create a new EnrolmentMemberDao with an attached configuration
     */
    public EnrolmentMemberDao(Configuration configuration) {
        super(EnrolmentMember.ENROLMENT_MEMBER, com.unchartedpartners.databases.tables.pojos.EnrolmentMember.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.EnrolmentMember object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchById(Long... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.EnrolmentMember fetchOneById(Long value) {
        return fetchOne(EnrolmentMember.ENROLMENT_MEMBER.ID, value);
    }

    /**
     * Fetch records that have <code>enrolment_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByEnrolmentId(Long... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.ENROLMENT_ID, values);
    }

    /**
     * Fetch records that have <code>person_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByPersonId(Long... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.PERSON_ID, values);
    }

    /**
     * Fetch records that have <code>person_type IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByPersonType(PersonType... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.PERSON_TYPE, values);
    }

    /**
     * Fetch records that have <code>coverage IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByCoverage(Map... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.COVERAGE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByDeleted(Boolean... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByCreatedBy(Long... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByCreated(Timestamp... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByUpdatedBy(Long... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByUpdated(Timestamp... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.UPDATED, values);
    }

    /**
     * Fetch records that have <code>underwriting_status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.EnrolmentMember> fetchByUnderwritingStatus(UnderwritingStatus... values) {
        return fetch(EnrolmentMember.ENROLMENT_MEMBER.UNDERWRITING_STATUS, values);
    }
}
