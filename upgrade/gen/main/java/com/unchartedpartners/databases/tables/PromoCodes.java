/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.PromoCodesRecord;
import com.unchartedpartners.jooq.PostgresSmallIntIntegerConverter;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PromoCodes extends TableImpl<PromoCodesRecord> {

    private static final long serialVersionUID = 2102453383;

    /**
     * The reference instance of <code>intest.promo_codes</code>
     */
    public static final PromoCodes PROMO_CODES = new PromoCodes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PromoCodesRecord> getRecordType() {
        return PromoCodesRecord.class;
    }

    /**
     * The column <code>intest.promo_codes.id</code>.
     */
    public final TableField<PromoCodesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.promo_codes_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.promo_codes.promo_code</code>.
     */
    public final TableField<PromoCodesRecord, String> PROMO_CODE = createField("promo_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.discount</code>.
     */
    public final TableField<PromoCodesRecord, Double> DISCOUNT = createField("discount", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.start_date</code>.
     */
    public final TableField<PromoCodesRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.expiry_date</code>.
     */
    public final TableField<PromoCodesRecord, Timestamp> EXPIRY_DATE = createField("expiry_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.deleted</code>.
     */
    public final TableField<PromoCodesRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.channel</code>.
     */
    public final TableField<PromoCodesRecord, String> CHANNEL = createField("channel", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.max_uses</code>.
     */
    public final TableField<PromoCodesRecord, Integer> MAX_USES = createField("max_uses", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "", new PostgresSmallIntIntegerConverter());

    /**
     * The column <code>intest.promo_codes.product_id</code>.
     */
    public final TableField<PromoCodesRecord, Long> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.product_code</code>.
     */
    public final TableField<PromoCodesRecord, String> PRODUCT_CODE = createField("product_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>intest.promo_codes.product_version</code>.
     */
    public final TableField<PromoCodesRecord, Long> PRODUCT_VERSION = createField("product_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>intest.promo_codes</code> table reference
     */
    public PromoCodes() {
        this(DSL.name("promo_codes"), null);
    }

    /**
     * Create an aliased <code>intest.promo_codes</code> table reference
     */
    public PromoCodes(String alias) {
        this(DSL.name(alias), PROMO_CODES);
    }

    /**
     * Create an aliased <code>intest.promo_codes</code> table reference
     */
    public PromoCodes(Name alias) {
        this(alias, PROMO_CODES);
    }

    private PromoCodes(Name alias, Table<PromoCodesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PromoCodes(Name alias, Table<PromoCodesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROMO_CODE_UINDEX, Indexes.PROMO_CODES_CODE_UINDEX, Indexes.PROMO_CODES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PromoCodesRecord, Long> getIdentity() {
        return Keys.IDENTITY_PROMO_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PromoCodesRecord> getPrimaryKey() {
        return Keys.PROMO_CODES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PromoCodesRecord>> getKeys() {
        return Arrays.<UniqueKey<PromoCodesRecord>>asList(Keys.PROMO_CODES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PromoCodesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PromoCodesRecord, ?>>asList(Keys.PROMO_CODES__PROMO_CODES_PRODUCT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromoCodes as(String alias) {
        return new PromoCodes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromoCodes as(Name alias) {
        return new PromoCodes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PromoCodes rename(String name) {
        return new PromoCodes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PromoCodes rename(Name name) {
        return new PromoCodes(name, null);
    }
}
