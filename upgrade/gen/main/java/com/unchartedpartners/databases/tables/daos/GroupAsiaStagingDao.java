/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.StagingStatus;
import com.unchartedpartners.databases.tables.GroupAsiaStaging;
import com.unchartedpartners.databases.tables.records.GroupAsiaStagingRecord;

import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseGroupAsiaStagingDao")
@ConditionalOnMissingBean(name="groupAsiaStagingDao")
public class GroupAsiaStagingDao extends BaseDaoImpl<GroupAsiaStagingRecord, com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging, Long> {

    /**
     * Create a new GroupAsiaStagingDao without any configuration
     */
    public GroupAsiaStagingDao() {
        super(GroupAsiaStaging.GROUP_ASIA_STAGING, com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging.class);
    }

    /**
     * Create a new GroupAsiaStagingDao with an attached configuration
     */
    public GroupAsiaStagingDao(Configuration configuration) {
        super(GroupAsiaStaging.GROUP_ASIA_STAGING, com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchById(Long... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging fetchOneById(Long value) {
        return fetchOne(GroupAsiaStaging.GROUP_ASIA_STAGING.ID, value);
    }

    /**
     * Fetch records that have <code>data IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByData(Map... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.DATA, values);
    }

    /**
     * Fetch records that have <code>staging_status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByStagingStatus(StagingStatus... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.STAGING_STATUS, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByDeleted(Boolean... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByCreatedBy(Long... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByCreated(Timestamp... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByUpdatedBy(Long... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByUpdated(Timestamp... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByTxId(String... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByAuditId(Long... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.AUDIT_ID, values);
    }

    /**
     * Fetch records that have <code>fail_policies IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.GroupAsiaStaging> fetchByFailPolicies(Map... values) {
        return fetch(GroupAsiaStaging.GROUP_ASIA_STAGING.FAIL_POLICIES, values);
    }
}
