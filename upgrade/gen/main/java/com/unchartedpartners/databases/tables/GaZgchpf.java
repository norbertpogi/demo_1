/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.GaZgchpfRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaZgchpf extends TableImpl<GaZgchpfRecord> {

    private static final long serialVersionUID = -1359286064;

    /**
     * The reference instance of <code>intest.ga_zgchpf</code>
     */
    public static final GaZgchpf GA_ZGCHPF = new GaZgchpf();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaZgchpfRecord> getRecordType() {
        return GaZgchpfRecord.class;
    }

    /**
     * The column <code>intest.ga_zgchpf.id</code>.
     */
    public final TableField<GaZgchpfRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.ga_zgchpf_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.ga_zgchpf.chdrcoy</code>.
     */
    public final TableField<GaZgchpfRecord, String> CHDRCOY = createField("chdrcoy", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_zgchpf.chdrnum</code>.
     */
    public final TableField<GaZgchpfRecord, String> CHDRNUM = createField("chdrnum", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_zgchpf.zvdcode</code>.
     */
    public final TableField<GaZgchpfRecord, String> ZVDCODE = createField("zvdcode", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_zgchpf.zpolwait</code>.
     */
    public final TableField<GaZgchpfRecord, Short> ZPOLWAIT = createField("zpolwait", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>intest.ga_zgchpf.user_profile</code>.
     */
    public final TableField<GaZgchpfRecord, String> USER_PROFILE = createField("user_profile", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_zgchpf.job_name</code>.
     */
    public final TableField<GaZgchpfRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_zgchpf.datime</code>.
     */
    public final TableField<GaZgchpfRecord, Timestamp> DATIME = createField("datime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.ga_zgchpf.eb_timestamp</code>.
     */
    public final TableField<GaZgchpfRecord, Timestamp> EB_TIMESTAMP = createField("eb_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>intest.ga_zgchpf</code> table reference
     */
    public GaZgchpf() {
        this(DSL.name("ga_zgchpf"), null);
    }

    /**
     * Create an aliased <code>intest.ga_zgchpf</code> table reference
     */
    public GaZgchpf(String alias) {
        this(DSL.name(alias), GA_ZGCHPF);
    }

    /**
     * Create an aliased <code>intest.ga_zgchpf</code> table reference
     */
    public GaZgchpf(Name alias) {
        this(alias, GA_ZGCHPF);
    }

    private GaZgchpf(Name alias, Table<GaZgchpfRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaZgchpf(Name alias, Table<GaZgchpfRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GA_ZGCHPF_IND, Indexes.GA_ZGCHPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GaZgchpfRecord, Long> getIdentity() {
        return Keys.IDENTITY_GA_ZGCHPF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaZgchpfRecord> getPrimaryKey() {
        return Keys.GA_ZGCHPF_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaZgchpfRecord>> getKeys() {
        return Arrays.<UniqueKey<GaZgchpfRecord>>asList(Keys.GA_ZGCHPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaZgchpf as(String alias) {
        return new GaZgchpf(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaZgchpf as(Name alias) {
        return new GaZgchpf(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaZgchpf rename(String name) {
        return new GaZgchpf(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaZgchpf rename(Name name) {
        return new GaZgchpf(name, null);
    }
}
