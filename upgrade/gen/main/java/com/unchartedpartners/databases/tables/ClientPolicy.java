/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.enums.PolicyStatus;
import com.unchartedpartners.databases.tables.records.ClientPolicyRecord;
import com.unchartedpartners.jooq.PostgresJsonMapBinder;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientPolicy extends TableImpl<ClientPolicyRecord> {

    private static final long serialVersionUID = -5148054;

    /**
     * The reference instance of <code>intest.client_policy</code>
     */
    public static final ClientPolicy CLIENT_POLICY = new ClientPolicy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientPolicyRecord> getRecordType() {
        return ClientPolicyRecord.class;
    }

    /**
     * The column <code>intest.client_policy.id</code>.
     */
    public final TableField<ClientPolicyRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.client_policy_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.client_policy.client_id</code>.
     */
    public final TableField<ClientPolicyRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.policy_no</code>.
     */
    public final TableField<ClientPolicyRecord, String> POLICY_NO = createField("policy_no", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.policy_start_date</code>.
     */
    public final TableField<ClientPolicyRecord, Timestamp> POLICY_START_DATE = createField("policy_start_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.policy_end_date</code>.
     */
    public final TableField<ClientPolicyRecord, Timestamp> POLICY_END_DATE = createField("policy_end_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.policy_status</code>.
     */
    public final TableField<ClientPolicyRecord, PolicyStatus> POLICY_STATUS = createField("policy_status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.unchartedpartners.databases.enums.PolicyStatus.class), this, "");

    /**
     * The column <code>intest.client_policy.deleted</code>.
     */
    public final TableField<ClientPolicyRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.created_by</code>.
     */
    public final TableField<ClientPolicyRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.created</code>.
     */
    public final TableField<ClientPolicyRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.updated_by</code>.
     */
    public final TableField<ClientPolicyRecord, Long> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.updated</code>.
     */
    public final TableField<ClientPolicyRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.client_policy.enrolment_start_date</code>.
     */
    public final TableField<ClientPolicyRecord, Timestamp> ENROLMENT_START_DATE = createField("enrolment_start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.client_policy.enrolment_end_date</code>.
     */
    public final TableField<ClientPolicyRecord, Timestamp> ENROLMENT_END_DATE = createField("enrolment_end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.client_policy.config</code>.
     */
    public final TableField<ClientPolicyRecord, Map> CONFIG = createField("config", org.jooq.impl.SQLDataType.OTHER, this, "", new PostgresJsonMapBinder());

    /**
     * The column <code>intest.client_policy.report_config</code>.
     */
    public final TableField<ClientPolicyRecord, Map> REPORT_CONFIG = createField("report_config", org.jooq.impl.SQLDataType.OTHER, this, "", new PostgresJsonMapBinder());

    /**
     * The column <code>intest.client_policy.content_config</code>.
     */
    public final TableField<ClientPolicyRecord, Map> CONTENT_CONFIG = createField("content_config", org.jooq.impl.SQLDataType.OTHER, this, "", new PostgresJsonMapBinder());

    /**
     * The column <code>intest.client_policy.enable_self_registration</code>.
     */
    public final TableField<ClientPolicyRecord, Boolean> ENABLE_SELF_REGISTRATION = createField("enable_self_registration", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>intest.client_policy.enable_dependent_registration</code>.
     */
    public final TableField<ClientPolicyRecord, Boolean> ENABLE_DEPENDENT_REGISTRATION = createField("enable_dependent_registration", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>intest.client_policy.underwriting_required</code>.
     */
    public final TableField<ClientPolicyRecord, Boolean> UNDERWRITING_REQUIRED = createField("underwriting_required", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>intest.client_policy</code> table reference
     */
    public ClientPolicy() {
        this(DSL.name("client_policy"), null);
    }

    /**
     * Create an aliased <code>intest.client_policy</code> table reference
     */
    public ClientPolicy(String alias) {
        this(DSL.name(alias), CLIENT_POLICY);
    }

    /**
     * Create an aliased <code>intest.client_policy</code> table reference
     */
    public ClientPolicy(Name alias) {
        this(alias, CLIENT_POLICY);
    }

    private ClientPolicy(Name alias, Table<ClientPolicyRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientPolicy(Name alias, Table<ClientPolicyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENT_POLICY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClientPolicyRecord, Long> getIdentity() {
        return Keys.IDENTITY_CLIENT_POLICY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientPolicyRecord> getPrimaryKey() {
        return Keys.CLIENT_POLICY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientPolicyRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientPolicyRecord>>asList(Keys.CLIENT_POLICY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ClientPolicyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClientPolicyRecord, ?>>asList(Keys.CLIENT_POLICY__CLIENT_POLICY_CLIENT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientPolicy as(String alias) {
        return new ClientPolicy(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientPolicy as(Name alias) {
        return new ClientPolicy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientPolicy rename(String name) {
        return new ClientPolicy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientPolicy rename(Name name) {
        return new ClientPolicy(name, null);
    }
}
