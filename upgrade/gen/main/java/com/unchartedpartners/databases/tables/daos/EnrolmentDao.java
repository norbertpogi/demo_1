/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.EnrolmentStatus;
import com.unchartedpartners.databases.tables.Enrolment;
import com.unchartedpartners.databases.tables.records.EnrolmentRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseEnrolmentDao")
@ConditionalOnMissingBean(name="enrolmentDao")
public class EnrolmentDao extends BaseDaoImpl<EnrolmentRecord, com.unchartedpartners.databases.tables.pojos.Enrolment, Long> {

    /**
     * Create a new EnrolmentDao without any configuration
     */
    public EnrolmentDao() {
        super(Enrolment.ENROLMENT, com.unchartedpartners.databases.tables.pojos.Enrolment.class);
    }

    /**
     * Create a new EnrolmentDao with an attached configuration
     */
    public EnrolmentDao(Configuration configuration) {
        super(Enrolment.ENROLMENT, com.unchartedpartners.databases.tables.pojos.Enrolment.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.Enrolment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchById(Long... values) {
        return fetch(Enrolment.ENROLMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.Enrolment fetchOneById(Long value) {
        return fetchOne(Enrolment.ENROLMENT.ID, value);
    }

    /**
     * Fetch records that have <code>client_policy_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByClientPolicyId(Long... values) {
        return fetch(Enrolment.ENROLMENT.CLIENT_POLICY_ID, values);
    }

    /**
     * Fetch records that have <code>employee_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByEmployeeNo(String... values) {
        return fetch(Enrolment.ENROLMENT.EMPLOYEE_NO, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByStatus(EnrolmentStatus... values) {
        return fetch(Enrolment.ENROLMENT.STATUS, values);
    }

    /**
     * Fetch records that have <code>consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByConsent(Boolean... values) {
        return fetch(Enrolment.ENROLMENT.CONSENT, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByDeleted(Boolean... values) {
        return fetch(Enrolment.ENROLMENT.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByCreatedBy(Long... values) {
        return fetch(Enrolment.ENROLMENT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByCreated(Timestamp... values) {
        return fetch(Enrolment.ENROLMENT.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByUpdatedBy(Long... values) {
        return fetch(Enrolment.ENROLMENT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByUpdated(Timestamp... values) {
        return fetch(Enrolment.ENROLMENT.UPDATED, values);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByCategory(String... values) {
        return fetch(Enrolment.ENROLMENT.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>subsidiary_name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchBySubsidiaryName(String... values) {
        return fetch(Enrolment.ENROLMENT.SUBSIDIARY_NAME, values);
    }

    /**
     * Fetch records that have <code>contact_number IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByContactNumber(String... values) {
        return fetch(Enrolment.ENROLMENT.CONTACT_NUMBER, values);
    }

    /**
     * Fetch records that have <code>contact_address IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByContactAddress(String... values) {
        return fetch(Enrolment.ENROLMENT.CONTACT_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>payment_method IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByPaymentMethod(String... values) {
        return fetch(Enrolment.ENROLMENT.PAYMENT_METHOD, values);
    }

    /**
     * Fetch records that have <code>total_premium IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByTotalPremium(String... values) {
        return fetch(Enrolment.ENROLMENT.TOTAL_PREMIUM, values);
    }

    /**
     * Fetch records that have <code>hdf_consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByHdfConsent(Boolean... values) {
        return fetch(Enrolment.ENROLMENT.HDF_CONSENT, values);
    }

    /**
     * Fetch records that have <code>payment_consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Enrolment> fetchByPaymentConsent(Boolean... values) {
        return fetch(Enrolment.ENROLMENT.PAYMENT_CONSENT, values);
    }
}
