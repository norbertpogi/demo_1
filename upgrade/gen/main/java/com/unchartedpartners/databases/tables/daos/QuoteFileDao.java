/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.tables.QuoteFile;
import com.unchartedpartners.databases.tables.records.QuoteFileRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseQuoteFileDao")
@ConditionalOnMissingBean(name="quoteFileDao")
public class QuoteFileDao extends BaseDaoImpl<QuoteFileRecord, com.unchartedpartners.databases.tables.pojos.QuoteFile, Record2<Long, Long>> {

    /**
     * Create a new QuoteFileDao without any configuration
     */
    public QuoteFileDao() {
        super(QuoteFile.QUOTE_FILE, com.unchartedpartners.databases.tables.pojos.QuoteFile.class);
    }

    /**
     * Create a new QuoteFileDao with an attached configuration
     */
    public QuoteFileDao(Configuration configuration) {
        super(QuoteFile.QUOTE_FILE, com.unchartedpartners.databases.tables.pojos.QuoteFile.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Long, Long> getId(com.unchartedpartners.databases.tables.pojos.QuoteFile object) {
        return compositeKeyRecord(object.getQuoteId(), object.getDataFileId());
    }

    /**
     * Fetch records that have <code>quote_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByQuoteId(Long... values) {
        return fetch(QuoteFile.QUOTE_FILE.QUOTE_ID, values);
    }

    /**
     * Fetch records that have <code>data_file_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByDataFileId(Long... values) {
        return fetch(QuoteFile.QUOTE_FILE.DATA_FILE_ID, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByDeleted(Boolean... values) {
        return fetch(QuoteFile.QUOTE_FILE.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByCreatedBy(Long... values) {
        return fetch(QuoteFile.QUOTE_FILE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByCreated(Timestamp... values) {
        return fetch(QuoteFile.QUOTE_FILE.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByUpdatedBy(Long... values) {
        return fetch(QuoteFile.QUOTE_FILE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByUpdated(Timestamp... values) {
        return fetch(QuoteFile.QUOTE_FILE.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByTxId(String... values) {
        return fetch(QuoteFile.QUOTE_FILE.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.QuoteFile> fetchByAuditId(Long... values) {
        return fetch(QuoteFile.QUOTE_FILE.AUDIT_ID, values);
    }
}
