/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.enums.AccountType;
import com.unchartedpartners.databases.enums.QuotePaymentMethod;
import com.unchartedpartners.databases.tables.records.ReportViewRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportView extends TableImpl<ReportViewRecord> {

    private static final long serialVersionUID = 2125897470;

    /**
     * The reference instance of <code>intest.report_view</code>
     */
    public static final ReportView REPORT_VIEW = new ReportView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportViewRecord> getRecordType() {
        return ReportViewRecord.class;
    }

    /**
     * The column <code>intest.report_view.QUOTE_ID</code>.
     */
    public final TableField<ReportViewRecord, Long> QUOTE_ID = createField("QUOTE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>intest.report_view.QUOTE_NAME</code>.
     */
    public final TableField<ReportViewRecord, String> QUOTE_NAME = createField("QUOTE_NAME", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.product_code</code>.
     */
    public final TableField<ReportViewRecord, String> PRODUCT_CODE = createField("product_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.report_view.PRODUCT_NAME</code>.
     */
    public final TableField<ReportViewRecord, String> PRODUCT_NAME = createField("PRODUCT_NAME", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.quote_status</code>.
     */
    public final TableField<ReportViewRecord, String> QUOTE_STATUS = createField("quote_status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>intest.report_view.agent_name</code>.
     */
    public final TableField<ReportViewRecord, String> AGENT_NAME = createField("agent_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.account_code</code>.
     */
    public final TableField<ReportViewRecord, String> ACCOUNT_CODE = createField("account_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.report_view.account_type</code>.
     */
    public final TableField<ReportViewRecord, AccountType> ACCOUNT_TYPE = createField("account_type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.unchartedpartners.databases.enums.AccountType.class), this, "");

    /**
     * The column <code>intest.report_view.account_path</code>.
     */
    public final TableField<ReportViewRecord, String> ACCOUNT_PATH = createField("account_path", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.quote_estimate_amount</code>.
     */
    public final TableField<ReportViewRecord, BigDecimal> QUOTE_ESTIMATE_AMOUNT = createField("quote_estimate_amount", org.jooq.impl.SQLDataType.NUMERIC(10, 2), this, "");

    /**
     * The column <code>intest.report_view.quote_proposed_amount</code>.
     */
    public final TableField<ReportViewRecord, BigDecimal> QUOTE_PROPOSED_AMOUNT = createField("quote_proposed_amount", org.jooq.impl.SQLDataType.NUMERIC(10, 2), this, "");

    /**
     * The column <code>intest.report_view.quote_final_amount</code>.
     */
    public final TableField<ReportViewRecord, BigDecimal> QUOTE_FINAL_AMOUNT = createField("quote_final_amount", org.jooq.impl.SQLDataType.NUMERIC(10, 2), this, "");

    /**
     * The column <code>intest.report_view.quote_created_date</code>.
     */
    public final TableField<ReportViewRecord, Timestamp> QUOTE_CREATED_DATE = createField("quote_created_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.report_view.quote_submission_date</code>.
     */
    public final TableField<ReportViewRecord, Timestamp> QUOTE_SUBMISSION_DATE = createField("quote_submission_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.report_view.quote_in_force_date</code>.
     */
    public final TableField<ReportViewRecord, Timestamp> QUOTE_IN_FORCE_DATE = createField("quote_in_force_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.report_view.policy_no</code>.
     */
    public final TableField<ReportViewRecord, String> POLICY_NO = createField("policy_no", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.report_view.agent_code</code>.
     */
    public final TableField<ReportViewRecord, String> AGENT_CODE = createField("agent_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.agent_first_name</code>.
     */
    public final TableField<ReportViewRecord, String> AGENT_FIRST_NAME = createField("agent_first_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.agent_last_name</code>.
     */
    public final TableField<ReportViewRecord, String> AGENT_LAST_NAME = createField("agent_last_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.contact_name</code>.
     */
    public final TableField<ReportViewRecord, String> CONTACT_NAME = createField("contact_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.contact_no</code>.
     */
    public final TableField<ReportViewRecord, String> CONTACT_NO = createField("contact_no", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.contact_email</code>.
     */
    public final TableField<ReportViewRecord, String> CONTACT_EMAIL = createField("contact_email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.auth_signatory_name</code>.
     */
    public final TableField<ReportViewRecord, String> AUTH_SIGNATORY_NAME = createField("auth_signatory_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.auth_signatory_designation</code>.
     */
    public final TableField<ReportViewRecord, String> AUTH_SIGNATORY_DESIGNATION = createField("auth_signatory_designation", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.company_address</code>.
     */
    public final TableField<ReportViewRecord, String> COMPANY_ADDRESS = createField("company_address", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>intest.report_view.company_postal_code</code>.
     */
    public final TableField<ReportViewRecord, String> COMPANY_POSTAL_CODE = createField("company_postal_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.report_view.nature_of_business</code>.
     */
    public final TableField<ReportViewRecord, String> NATURE_OF_BUSINESS = createField("nature_of_business", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.report_view.payment_method</code>.
     */
    public final TableField<ReportViewRecord, QuotePaymentMethod> PAYMENT_METHOD = createField("payment_method", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.unchartedpartners.databases.enums.QuotePaymentMethod.class), this, "");

    /**
     * The column <code>intest.report_view.s_cid</code>.
     */
    public final TableField<ReportViewRecord, String> S_CID = createField("s_cid", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>intest.report_view.promo_code</code>.
     */
    public final TableField<ReportViewRecord, String> PROMO_CODE = createField("promo_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.report_view.referral_id_1</code>.
     */
    public final TableField<ReportViewRecord, String> REFERRAL_ID_1 = createField("referral_id_1", org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>intest.report_view.referral_id_2</code>.
     */
    public final TableField<ReportViewRecord, String> REFERRAL_ID_2 = createField("referral_id_2", org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>intest.report_view.categories</code>.
     */
    public final TableField<ReportViewRecord, String> CATEGORIES = createField("categories", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>intest.report_view</code> table reference
     */
    public ReportView() {
        this(DSL.name("report_view"), null);
    }

    /**
     * Create an aliased <code>intest.report_view</code> table reference
     */
    public ReportView(String alias) {
        this(DSL.name(alias), REPORT_VIEW);
    }

    /**
     * Create an aliased <code>intest.report_view</code> table reference
     */
    public ReportView(Name alias) {
        this(alias, REPORT_VIEW);
    }

    private ReportView(Name alias, Table<ReportViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportView(Name alias, Table<ReportViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportView as(String alias) {
        return new ReportView(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportView as(Name alias) {
        return new ReportView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportView rename(String name) {
        return new ReportView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportView rename(Name name) {
        return new ReportView(name, null);
    }
}
