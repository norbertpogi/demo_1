/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.tables.ClaimUploadHistory;
import com.unchartedpartners.databases.tables.records.ClaimUploadHistoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseClaimUploadHistoryDao")
@ConditionalOnMissingBean(name="claimUploadHistoryDao")
public class ClaimUploadHistoryDao extends BaseDaoImpl<ClaimUploadHistoryRecord, com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory, Long> {

    /**
     * Create a new ClaimUploadHistoryDao without any configuration
     */
    public ClaimUploadHistoryDao() {
        super(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY, com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory.class);
    }

    /**
     * Create a new ClaimUploadHistoryDao with an attached configuration
     */
    public ClaimUploadHistoryDao(Configuration configuration) {
        super(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY, com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchById(Long... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory fetchOneById(Long value) {
        return fetchOne(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.ID, value);
    }

    /**
     * Fetch records that have <code>reference_number IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByReferenceNumber(String... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.REFERENCE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>uploaded IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByUploaded(Timestamp... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.UPLOADED, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByDeleted(Boolean... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByCreatedBy(Long... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByCreated(Timestamp... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByUpdatedBy(Long... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.ClaimUploadHistory> fetchByUpdated(Timestamp... values) {
        return fetch(ClaimUploadHistory.CLAIM_UPLOAD_HISTORY.UPDATED, values);
    }
}
