/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.enums.EnrolmentStatus;
import com.unchartedpartners.databases.tables.records.EnrolmentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Enrolment extends TableImpl<EnrolmentRecord> {

    private static final long serialVersionUID = 1780420027;

    /**
     * The reference instance of <code>intest.enrolment</code>
     */
    public static final Enrolment ENROLMENT = new Enrolment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnrolmentRecord> getRecordType() {
        return EnrolmentRecord.class;
    }

    /**
     * The column <code>intest.enrolment.id</code>.
     */
    public final TableField<EnrolmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.enrolment_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.enrolment.client_policy_id</code>.
     */
    public final TableField<EnrolmentRecord, Long> CLIENT_POLICY_ID = createField("client_policy_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.employee_no</code>.
     */
    public final TableField<EnrolmentRecord, String> EMPLOYEE_NO = createField("employee_no", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.status</code>.
     */
    public final TableField<EnrolmentRecord, EnrolmentStatus> STATUS = createField("status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.unchartedpartners.databases.enums.EnrolmentStatus.class), this, "");

    /**
     * The column <code>intest.enrolment.consent</code>.
     */
    public final TableField<EnrolmentRecord, Boolean> CONSENT = createField("consent", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>intest.enrolment.deleted</code>.
     */
    public final TableField<EnrolmentRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.created_by</code>.
     */
    public final TableField<EnrolmentRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.created</code>.
     */
    public final TableField<EnrolmentRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.updated_by</code>.
     */
    public final TableField<EnrolmentRecord, Long> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.updated</code>.
     */
    public final TableField<EnrolmentRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.enrolment.category</code>.
     */
    public final TableField<EnrolmentRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>intest.enrolment.subsidiary_name</code>.
     */
    public final TableField<EnrolmentRecord, String> SUBSIDIARY_NAME = createField("subsidiary_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.enrolment.contact_number</code>.
     */
    public final TableField<EnrolmentRecord, String> CONTACT_NUMBER = createField("contact_number", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>intest.enrolment.contact_address</code>.
     */
    public final TableField<EnrolmentRecord, String> CONTACT_ADDRESS = createField("contact_address", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.enrolment.payment_method</code>.
     */
    public final TableField<EnrolmentRecord, String> PAYMENT_METHOD = createField("payment_method", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.enrolment.total_premium</code>.
     */
    public final TableField<EnrolmentRecord, String> TOTAL_PREMIUM = createField("total_premium", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.enrolment.hdf_consent</code>.
     */
    public final TableField<EnrolmentRecord, Boolean> HDF_CONSENT = createField("hdf_consent", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>intest.enrolment.payment_consent</code>.
     */
    public final TableField<EnrolmentRecord, Boolean> PAYMENT_CONSENT = createField("payment_consent", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>intest.enrolment</code> table reference
     */
    public Enrolment() {
        this(DSL.name("enrolment"), null);
    }

    /**
     * Create an aliased <code>intest.enrolment</code> table reference
     */
    public Enrolment(String alias) {
        this(DSL.name(alias), ENROLMENT);
    }

    /**
     * Create an aliased <code>intest.enrolment</code> table reference
     */
    public Enrolment(Name alias) {
        this(alias, ENROLMENT);
    }

    private Enrolment(Name alias, Table<EnrolmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Enrolment(Name alias, Table<EnrolmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENROLMENT_EMPLOYEE_NO, Indexes.ENROLMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnrolmentRecord, Long> getIdentity() {
        return Keys.IDENTITY_ENROLMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnrolmentRecord> getPrimaryKey() {
        return Keys.ENROLMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnrolmentRecord>> getKeys() {
        return Arrays.<UniqueKey<EnrolmentRecord>>asList(Keys.ENROLMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnrolmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnrolmentRecord, ?>>asList(Keys.ENROLMENT__ENROLMENT_CLIENT_POLICY_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Enrolment as(String alias) {
        return new Enrolment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Enrolment as(Name alias) {
        return new Enrolment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Enrolment rename(String name) {
        return new Enrolment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Enrolment rename(Name name) {
        return new Enrolment(name, null);
    }
}
