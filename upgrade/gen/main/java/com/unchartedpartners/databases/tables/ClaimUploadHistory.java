/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.ClaimUploadHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClaimUploadHistory extends TableImpl<ClaimUploadHistoryRecord> {

    private static final long serialVersionUID = -1941557405;

    /**
     * The reference instance of <code>intest.claim_upload_history</code>
     */
    public static final ClaimUploadHistory CLAIM_UPLOAD_HISTORY = new ClaimUploadHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClaimUploadHistoryRecord> getRecordType() {
        return ClaimUploadHistoryRecord.class;
    }

    /**
     * The column <code>intest.claim_upload_history.id</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.claim_upload_history_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.claim_upload_history.reference_number</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, String> REFERENCE_NUMBER = createField("reference_number", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>intest.claim_upload_history.uploaded</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Timestamp> UPLOADED = createField("uploaded", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.claim_upload_history.deleted</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.claim_upload_history.created_by</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.claim_upload_history.created</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.claim_upload_history.updated_by</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Long> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.claim_upload_history.updated</code>.
     */
    public final TableField<ClaimUploadHistoryRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>intest.claim_upload_history</code> table reference
     */
    public ClaimUploadHistory() {
        this(DSL.name("claim_upload_history"), null);
    }

    /**
     * Create an aliased <code>intest.claim_upload_history</code> table reference
     */
    public ClaimUploadHistory(String alias) {
        this(DSL.name(alias), CLAIM_UPLOAD_HISTORY);
    }

    /**
     * Create an aliased <code>intest.claim_upload_history</code> table reference
     */
    public ClaimUploadHistory(Name alias) {
        this(alias, CLAIM_UPLOAD_HISTORY);
    }

    private ClaimUploadHistory(Name alias, Table<ClaimUploadHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClaimUploadHistory(Name alias, Table<ClaimUploadHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLAIM_UPLOAD_HISTORY_IND, Indexes.CLAIM_UPLOAD_HISTORY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClaimUploadHistoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_CLAIM_UPLOAD_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClaimUploadHistoryRecord> getPrimaryKey() {
        return Keys.CLAIM_UPLOAD_HISTORY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClaimUploadHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ClaimUploadHistoryRecord>>asList(Keys.CLAIM_UPLOAD_HISTORY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClaimUploadHistory as(String alias) {
        return new ClaimUploadHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClaimUploadHistory as(Name alias) {
        return new ClaimUploadHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClaimUploadHistory rename(String name) {
        return new ClaimUploadHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClaimUploadHistory rename(Name name) {
        return new ClaimUploadHistory(name, null);
    }
}
