/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.pojos;


import com.unchartedpartners.databases.enums.PersonType;
import com.unchartedpartners.databases.enums.UnderwritingStatus;

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Map;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnrolmentMember implements Serializable {

    private static final long serialVersionUID = -1739519620;

    private Long               id;
    private Long               enrolmentId;
    private Long               personId;
    private PersonType         personType;
    private Map                coverage;
    private Boolean            deleted;
    private Long               createdBy;
    private Timestamp          created;
    private Long               updatedBy;
    private Timestamp          updated;
    private UnderwritingStatus underwritingStatus;

    public EnrolmentMember() {}

    public EnrolmentMember(EnrolmentMember value) {
        this.id = value.id;
        this.enrolmentId = value.enrolmentId;
        this.personId = value.personId;
        this.personType = value.personType;
        this.coverage = value.coverage;
        this.deleted = value.deleted;
        this.createdBy = value.createdBy;
        this.created = value.created;
        this.updatedBy = value.updatedBy;
        this.updated = value.updated;
        this.underwritingStatus = value.underwritingStatus;
    }

    public EnrolmentMember(
        Long               id,
        Long               enrolmentId,
        Long               personId,
        PersonType         personType,
        Map                coverage,
        Boolean            deleted,
        Long               createdBy,
        Timestamp          created,
        Long               updatedBy,
        Timestamp          updated,
        UnderwritingStatus underwritingStatus
    ) {
        this.id = id;
        this.enrolmentId = enrolmentId;
        this.personId = personId;
        this.personType = personType;
        this.coverage = coverage;
        this.deleted = deleted;
        this.createdBy = createdBy;
        this.created = created;
        this.updatedBy = updatedBy;
        this.updated = updated;
        this.underwritingStatus = underwritingStatus;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getEnrolmentId() {
        return this.enrolmentId;
    }

    public void setEnrolmentId(Long enrolmentId) {
        this.enrolmentId = enrolmentId;
    }

    public Long getPersonId() {
        return this.personId;
    }

    public void setPersonId(Long personId) {
        this.personId = personId;
    }

    public PersonType getPersonType() {
        return this.personType;
    }

    public void setPersonType(PersonType personType) {
        this.personType = personType;
    }

    public Map getCoverage() {
        return this.coverage;
    }

    public void setCoverage(Map coverage) {
        this.coverage = coverage;
    }

    public Boolean getDeleted() {
        return this.deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public Long getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    public Timestamp getCreated() {
        return this.created;
    }

    public void setCreated(Timestamp created) {
        this.created = created;
    }

    public Long getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Timestamp getUpdated() {
        return this.updated;
    }

    public void setUpdated(Timestamp updated) {
        this.updated = updated;
    }

    public UnderwritingStatus getUnderwritingStatus() {
        return this.underwritingStatus;
    }

    public void setUnderwritingStatus(UnderwritingStatus underwritingStatus) {
        this.underwritingStatus = underwritingStatus;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EnrolmentMember (");

        sb.append("id :" );
        sb.append(id);
        sb.append(",").append("enrolmentId :" );
        sb.append(enrolmentId);
        sb.append(",").append("personId :" );
        sb.append(personId);
        sb.append(",").append("personType :" );
        sb.append(personType);
        sb.append(",").append("coverage :" );
        sb.append(coverage);
        sb.append(",").append("deleted :" );
        sb.append(deleted);
        sb.append(",").append("createdBy :" );
        sb.append(createdBy);
        sb.append(",").append("created :" );
        sb.append(created);
        sb.append(",").append("updatedBy :" );
        sb.append(updatedBy);
        sb.append(",").append("updated :" );
        sb.append(updated);
        sb.append(",").append("underwritingStatus :" );
        sb.append(underwritingStatus);

        sb.append(")");
        return sb.toString();
    }
}
