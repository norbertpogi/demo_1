/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.pojos;


import com.unchartedpartners.databases.enums.PolicyMemberBatchTask;
import com.unchartedpartners.databases.enums.PolicyMemberStatus;
import com.unchartedpartners.databases.enums.PolicyMemberType;
import com.unchartedpartners.databases.enums.UnderwritingStatus;

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Map;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyMember implements Serializable {

    private static final long serialVersionUID = 1950364815;

    private Long                  policyId;
    private Long                  personId;
    private Map                   data;
    private PolicyMemberType      type;
    private PolicyMemberStatus    status;
    private PolicyMemberBatchTask task;
    private Timestamp             activationDate;
    private Boolean               deleted;
    private Long                  createdBy;
    private Timestamp             created;
    private Long                  updatedBy;
    private Timestamp             updated;
    private String                txId;
    private Long                  auditId;
    private Timestamp             coverageStartDate;
    private Timestamp             gaLastUpdate;
    private Timestamp             terminationDate;
    private UnderwritingStatus    underwritingStatus;

    public PolicyMember() {}

    public PolicyMember(PolicyMember value) {
        this.policyId = value.policyId;
        this.personId = value.personId;
        this.data = value.data;
        this.type = value.type;
        this.status = value.status;
        this.task = value.task;
        this.activationDate = value.activationDate;
        this.deleted = value.deleted;
        this.createdBy = value.createdBy;
        this.created = value.created;
        this.updatedBy = value.updatedBy;
        this.updated = value.updated;
        this.txId = value.txId;
        this.auditId = value.auditId;
        this.coverageStartDate = value.coverageStartDate;
        this.gaLastUpdate = value.gaLastUpdate;
        this.terminationDate = value.terminationDate;
        this.underwritingStatus = value.underwritingStatus;
    }

    public PolicyMember(
        Long                  policyId,
        Long                  personId,
        Map                   data,
        PolicyMemberType      type,
        PolicyMemberStatus    status,
        PolicyMemberBatchTask task,
        Timestamp             activationDate,
        Boolean               deleted,
        Long                  createdBy,
        Timestamp             created,
        Long                  updatedBy,
        Timestamp             updated,
        String                txId,
        Long                  auditId,
        Timestamp             coverageStartDate,
        Timestamp             gaLastUpdate,
        Timestamp             terminationDate,
        UnderwritingStatus    underwritingStatus
    ) {
        this.policyId = policyId;
        this.personId = personId;
        this.data = data;
        this.type = type;
        this.status = status;
        this.task = task;
        this.activationDate = activationDate;
        this.deleted = deleted;
        this.createdBy = createdBy;
        this.created = created;
        this.updatedBy = updatedBy;
        this.updated = updated;
        this.txId = txId;
        this.auditId = auditId;
        this.coverageStartDate = coverageStartDate;
        this.gaLastUpdate = gaLastUpdate;
        this.terminationDate = terminationDate;
        this.underwritingStatus = underwritingStatus;
    }

    public Long getPolicyId() {
        return this.policyId;
    }

    public void setPolicyId(Long policyId) {
        this.policyId = policyId;
    }

    public Long getPersonId() {
        return this.personId;
    }

    public void setPersonId(Long personId) {
        this.personId = personId;
    }

    public Map getData() {
        return this.data;
    }

    public void setData(Map data) {
        this.data = data;
    }

    public PolicyMemberType getType() {
        return this.type;
    }

    public void setType(PolicyMemberType type) {
        this.type = type;
    }

    public PolicyMemberStatus getStatus() {
        return this.status;
    }

    public void setStatus(PolicyMemberStatus status) {
        this.status = status;
    }

    public PolicyMemberBatchTask getTask() {
        return this.task;
    }

    public void setTask(PolicyMemberBatchTask task) {
        this.task = task;
    }

    public Timestamp getActivationDate() {
        return this.activationDate;
    }

    public void setActivationDate(Timestamp activationDate) {
        this.activationDate = activationDate;
    }

    public Boolean getDeleted() {
        return this.deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public Long getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    public Timestamp getCreated() {
        return this.created;
    }

    public void setCreated(Timestamp created) {
        this.created = created;
    }

    public Long getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Timestamp getUpdated() {
        return this.updated;
    }

    public void setUpdated(Timestamp updated) {
        this.updated = updated;
    }

    public String getTxId() {
        return this.txId;
    }

    public void setTxId(String txId) {
        this.txId = txId;
    }

    public Long getAuditId() {
        return this.auditId;
    }

    public void setAuditId(Long auditId) {
        this.auditId = auditId;
    }

    public Timestamp getCoverageStartDate() {
        return this.coverageStartDate;
    }

    public void setCoverageStartDate(Timestamp coverageStartDate) {
        this.coverageStartDate = coverageStartDate;
    }

    public Timestamp getGaLastUpdate() {
        return this.gaLastUpdate;
    }

    public void setGaLastUpdate(Timestamp gaLastUpdate) {
        this.gaLastUpdate = gaLastUpdate;
    }

    public Timestamp getTerminationDate() {
        return this.terminationDate;
    }

    public void setTerminationDate(Timestamp terminationDate) {
        this.terminationDate = terminationDate;
    }

    public UnderwritingStatus getUnderwritingStatus() {
        return this.underwritingStatus;
    }

    public void setUnderwritingStatus(UnderwritingStatus underwritingStatus) {
        this.underwritingStatus = underwritingStatus;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PolicyMember (");

        sb.append("policyId :" );
        sb.append(policyId);
        sb.append(",").append("personId :" );
        sb.append(personId);
        sb.append(",").append("data :" );
        sb.append(data);
        sb.append(",").append("type :" );
        sb.append(type);
        sb.append(",").append("status :" );
        sb.append(status);
        sb.append(",").append("task :" );
        sb.append(task);
        sb.append(",").append("activationDate :" );
        sb.append(activationDate);
        sb.append(",").append("deleted :" );
        sb.append(deleted);
        sb.append(",").append("createdBy :" );
        sb.append(createdBy);
        sb.append(",").append("created :" );
        sb.append(created);
        sb.append(",").append("updatedBy :" );
        sb.append(updatedBy);
        sb.append(",").append("updated :" );
        sb.append(updated);
        sb.append(",").append("txId :" );
        sb.append(txId);
        sb.append(",").append("auditId :" );
        sb.append(auditId);
        sb.append(",").append("coverageStartDate :" );
        sb.append(coverageStartDate);
        sb.append(",").append("gaLastUpdate :" );
        sb.append(gaLastUpdate);
        sb.append(",").append("terminationDate :" );
        sb.append(terminationDate);
        sb.append(",").append("underwritingStatus :" );
        sb.append(underwritingStatus);

        sb.append(")");
        return sb.toString();
    }
}
