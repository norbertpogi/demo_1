/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.tables.Product;
import com.unchartedpartners.databases.tables.records.ProductRecord;

import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseProductDao")
@ConditionalOnMissingBean(name="productDao")
public class ProductDao extends BaseDaoImpl<ProductRecord, com.unchartedpartners.databases.tables.pojos.Product, Record3<String, Long, Long>> {

    /**
     * Create a new ProductDao without any configuration
     */
    public ProductDao() {
        super(Product.PRODUCT, com.unchartedpartners.databases.tables.pojos.Product.class);
    }

    /**
     * Create a new ProductDao with an attached configuration
     */
    public ProductDao(Configuration configuration) {
        super(Product.PRODUCT, com.unchartedpartners.databases.tables.pojos.Product.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record3<String, Long, Long> getId(com.unchartedpartners.databases.tables.pojos.Product object) {
        return compositeKeyRecord(object.getCode(), object.getId(), object.getVersion());
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchById(Long... values) {
        return fetch(Product.PRODUCT.ID, values);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByCode(String... values) {
        return fetch(Product.PRODUCT.CODE, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByVersion(Long... values) {
        return fetch(Product.PRODUCT.VERSION, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByName(String... values) {
        return fetch(Product.PRODUCT.NAME, values);
    }

    /**
     * Fetch records that have <code>config IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByConfig(Map... values) {
        return fetch(Product.PRODUCT.CONFIG, values);
    }

    /**
     * Fetch records that have <code>effective_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByEffectiveDate(Timestamp... values) {
        return fetch(Product.PRODUCT.EFFECTIVE_DATE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByDeleted(Boolean... values) {
        return fetch(Product.PRODUCT.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByCreatedBy(Long... values) {
        return fetch(Product.PRODUCT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByCreated(Timestamp... values) {
        return fetch(Product.PRODUCT.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByUpdatedBy(Long... values) {
        return fetch(Product.PRODUCT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByUpdated(Timestamp... values) {
        return fetch(Product.PRODUCT.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByTxId(String... values) {
        return fetch(Product.PRODUCT.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Product> fetchByAuditId(Long... values) {
        return fetch(Product.PRODUCT.AUDIT_ID, values);
    }
}
