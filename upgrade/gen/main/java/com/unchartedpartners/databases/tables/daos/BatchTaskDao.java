/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.BatchTaskStatus;
import com.unchartedpartners.databases.enums.BatchTaskType;
import com.unchartedpartners.databases.tables.BatchTask;
import com.unchartedpartners.databases.tables.records.BatchTaskRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseBatchTaskDao")
@ConditionalOnMissingBean(name="batchTaskDao")
public class BatchTaskDao extends BaseDaoImpl<BatchTaskRecord, com.unchartedpartners.databases.tables.pojos.BatchTask, Long> {

    /**
     * Create a new BatchTaskDao without any configuration
     */
    public BatchTaskDao() {
        super(BatchTask.BATCH_TASK, com.unchartedpartners.databases.tables.pojos.BatchTask.class);
    }

    /**
     * Create a new BatchTaskDao with an attached configuration
     */
    public BatchTaskDao(Configuration configuration) {
        super(BatchTask.BATCH_TASK, com.unchartedpartners.databases.tables.pojos.BatchTask.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.BatchTask object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchById(Long... values) {
        return fetch(BatchTask.BATCH_TASK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.BatchTask fetchOneById(Long value) {
        return fetchOne(BatchTask.BATCH_TASK.ID, value);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByType(BatchTaskType... values) {
        return fetch(BatchTask.BATCH_TASK.TYPE, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByStatus(BatchTaskStatus... values) {
        return fetch(BatchTask.BATCH_TASK.STATUS, values);
    }

    /**
     * Fetch records that have <code>ref_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByRefNo(String... values) {
        return fetch(BatchTask.BATCH_TASK.REF_NO, values);
    }

    /**
     * Fetch records that have <code>executor_reference IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByExecutorReference(String... values) {
        return fetch(BatchTask.BATCH_TASK.EXECUTOR_REFERENCE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByDeleted(Boolean... values) {
        return fetch(BatchTask.BATCH_TASK.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByCreatedBy(Long... values) {
        return fetch(BatchTask.BATCH_TASK.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByCreated(Timestamp... values) {
        return fetch(BatchTask.BATCH_TASK.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByUpdatedBy(Long... values) {
        return fetch(BatchTask.BATCH_TASK.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByUpdated(Timestamp... values) {
        return fetch(BatchTask.BATCH_TASK.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByTxId(String... values) {
        return fetch(BatchTask.BATCH_TASK.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.BatchTask> fetchByAuditId(Long... values) {
        return fetch(BatchTask.BATCH_TASK.AUDIT_ID, values);
    }
}
