/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.GaGflppfRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaGflppf extends TableImpl<GaGflppfRecord> {

    private static final long serialVersionUID = 270285104;

    /**
     * The reference instance of <code>intest.ga_gflppf</code>
     */
    public static final GaGflppf GA_GFLPPF = new GaGflppf();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GaGflppfRecord> getRecordType() {
        return GaGflppfRecord.class;
    }

    /**
     * The column <code>intest.ga_gflppf.id</code>.
     */
    public final TableField<GaGflppfRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.ga_gflppf_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.ga_gflppf.chdrcoy</code>.
     */
    public final TableField<GaGflppfRecord, String> CHDRCOY = createField("chdrcoy", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gflppf.chdrnum</code>.
     */
    public final TableField<GaGflppfRecord, String> CHDRNUM = createField("chdrnum", org.jooq.impl.SQLDataType.VARCHAR(8), this, "");

    /**
     * The column <code>intest.ga_gflppf.mbrno</code>.
     */
    public final TableField<GaGflppfRecord, String> MBRNO = createField("mbrno", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>intest.ga_gflppf.dpntno</code>.
     */
    public final TableField<GaGflppfRecord, String> DPNTNO = createField("dpntno", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>intest.ga_gflppf.gfupsts</code>.
     */
    public final TableField<GaGflppfRecord, String> GFUPSTS = createField("gfupsts", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gflppf.gfupcde</code>.
     */
    public final TableField<GaGflppfRecord, String> GFUPCDE = createField("gfupcde", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>intest.ga_gflppf.remdte</code>.
     */
    public final TableField<GaGflppfRecord, Integer> REMDTE = createField("remdte", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.fupremk</code>.
     */
    public final TableField<GaGflppfRecord, String> FUPREMK = createField("fupremk", org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>intest.ga_gflppf.termid</code>.
     */
    public final TableField<GaGflppfRecord, String> TERMID = createField("termid", org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>intest.ga_gflppf.user</code>.
     */
    public final TableField<GaGflppfRecord, Integer> USER = createField("user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.transaction_date</code>.
     */
    public final TableField<GaGflppfRecord, Integer> TRANSACTION_DATE = createField("transaction_date", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.transaction_time</code>.
     */
    public final TableField<GaGflppfRecord, Integer> TRANSACTION_TIME = createField("transaction_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.tranno</code>.
     */
    public final TableField<GaGflppfRecord, Integer> TRANNO = createField("tranno", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.fupflg</code>.
     */
    public final TableField<GaGflppfRecord, String> FUPFLG = createField("fupflg", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>intest.ga_gflppf.dtetrm</code>.
     */
    public final TableField<GaGflppfRecord, Integer> DTETRM = createField("dtetrm", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.fuprcvd</code>.
     */
    public final TableField<GaGflppfRecord, Integer> FUPRCVD = createField("fuprcvd", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>intest.ga_gflppf.user_profile</code>.
     */
    public final TableField<GaGflppfRecord, String> USER_PROFILE = createField("user_profile", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_gflppf.job_name</code>.
     */
    public final TableField<GaGflppfRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>intest.ga_gflppf.datime</code>.
     */
    public final TableField<GaGflppfRecord, Timestamp> DATIME = createField("datime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>intest.ga_gflppf.eb_timestamp</code>.
     */
    public final TableField<GaGflppfRecord, Timestamp> EB_TIMESTAMP = createField("eb_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>intest.ga_gflppf</code> table reference
     */
    public GaGflppf() {
        this(DSL.name("ga_gflppf"), null);
    }

    /**
     * Create an aliased <code>intest.ga_gflppf</code> table reference
     */
    public GaGflppf(String alias) {
        this(DSL.name(alias), GA_GFLPPF);
    }

    /**
     * Create an aliased <code>intest.ga_gflppf</code> table reference
     */
    public GaGflppf(Name alias) {
        this(alias, GA_GFLPPF);
    }

    private GaGflppf(Name alias, Table<GaGflppfRecord> aliased) {
        this(alias, aliased, null);
    }

    private GaGflppf(Name alias, Table<GaGflppfRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GA_GFLPPF_IND, Indexes.GA_GFLPPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GaGflppfRecord, Long> getIdentity() {
        return Keys.IDENTITY_GA_GFLPPF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GaGflppfRecord> getPrimaryKey() {
        return Keys.GA_GFLPPF_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GaGflppfRecord>> getKeys() {
        return Arrays.<UniqueKey<GaGflppfRecord>>asList(Keys.GA_GFLPPF_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaGflppf as(String alias) {
        return new GaGflppf(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GaGflppf as(Name alias) {
        return new GaGflppf(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GaGflppf rename(String name) {
        return new GaGflppf(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GaGflppf rename(Name name) {
        return new GaGflppf(name, null);
    }
}
