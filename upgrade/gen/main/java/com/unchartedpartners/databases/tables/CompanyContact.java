/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.CompanyContactRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyContact extends TableImpl<CompanyContactRecord> {

    private static final long serialVersionUID = 824093413;

    /**
     * The reference instance of <code>intest.company_contact</code>
     */
    public static final CompanyContact COMPANY_CONTACT = new CompanyContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyContactRecord> getRecordType() {
        return CompanyContactRecord.class;
    }

    /**
     * The column <code>intest.company_contact.id</code>.
     */
    public final TableField<CompanyContactRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.company_contact_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.company_contact.contact_no</code>.
     */
    public final TableField<CompanyContactRecord, String> CONTACT_NO = createField("contact_no", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.deleted</code>.
     */
    public final TableField<CompanyContactRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.created_by</code>.
     */
    public final TableField<CompanyContactRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.created</code>.
     */
    public final TableField<CompanyContactRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.updated_by</code>.
     */
    public final TableField<CompanyContactRecord, Long> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.updated</code>.
     */
    public final TableField<CompanyContactRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.tx_id</code>.
     */
    public final TableField<CompanyContactRecord, String> TX_ID = createField("tx_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.audit_id</code>.
     */
    public final TableField<CompanyContactRecord, Long> AUDIT_ID = createField("audit_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.company_contact.contact_name</code>.
     */
    public final TableField<CompanyContactRecord, String> CONTACT_NAME = createField("contact_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.contact_email</code>.
     */
    public final TableField<CompanyContactRecord, String> CONTACT_EMAIL = createField("contact_email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.auth_signatory_name</code>.
     */
    public final TableField<CompanyContactRecord, String> AUTH_SIGNATORY_NAME = createField("auth_signatory_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.auth_signatory_designation</code>.
     */
    public final TableField<CompanyContactRecord, String> AUTH_SIGNATORY_DESIGNATION = createField("auth_signatory_designation", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.agent_first_name</code>.
     */
    public final TableField<CompanyContactRecord, String> AGENT_FIRST_NAME = createField("agent_first_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.agent_last_name</code>.
     */
    public final TableField<CompanyContactRecord, String> AGENT_LAST_NAME = createField("agent_last_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.agent_code</code>.
     */
    public final TableField<CompanyContactRecord, String> AGENT_CODE = createField("agent_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.agent_email</code>.
     */
    public final TableField<CompanyContactRecord, String> AGENT_EMAIL = createField("agent_email", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>intest.company_contact.referral_id_1</code>.
     */
    public final TableField<CompanyContactRecord, String> REFERRAL_ID_1 = createField("referral_id_1", org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>intest.company_contact.referral_id_2</code>.
     */
    public final TableField<CompanyContactRecord, String> REFERRAL_ID_2 = createField("referral_id_2", org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * Create a <code>intest.company_contact</code> table reference
     */
    public CompanyContact() {
        this(DSL.name("company_contact"), null);
    }

    /**
     * Create an aliased <code>intest.company_contact</code> table reference
     */
    public CompanyContact(String alias) {
        this(DSL.name(alias), COMPANY_CONTACT);
    }

    /**
     * Create an aliased <code>intest.company_contact</code> table reference
     */
    public CompanyContact(Name alias) {
        this(alias, COMPANY_CONTACT);
    }

    private CompanyContact(Name alias, Table<CompanyContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanyContact(Name alias, Table<CompanyContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMPANY_CONTACT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompanyContactRecord, Long> getIdentity() {
        return Keys.IDENTITY_COMPANY_CONTACT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompanyContactRecord> getPrimaryKey() {
        return Keys.COMPANY_CONTACT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompanyContactRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyContactRecord>>asList(Keys.COMPANY_CONTACT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyContact as(String alias) {
        return new CompanyContact(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyContact as(Name alias) {
        return new CompanyContact(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyContact rename(String name) {
        return new CompanyContact(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyContact rename(Name name) {
        return new CompanyContact(name, null);
    }
}
