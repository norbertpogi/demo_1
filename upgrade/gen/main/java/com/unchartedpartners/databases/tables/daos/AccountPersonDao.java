/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.AccountRole;
import com.unchartedpartners.databases.enums.Dependent;
import com.unchartedpartners.databases.enums.OccupationClass;
import com.unchartedpartners.databases.tables.AccountPerson;
import com.unchartedpartners.databases.tables.records.AccountPersonRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseAccountPersonDao")
@ConditionalOnMissingBean(name="accountPersonDao")
public class AccountPersonDao extends BaseDaoImpl<AccountPersonRecord, com.unchartedpartners.databases.tables.pojos.AccountPerson, Long> {

    /**
     * Create a new AccountPersonDao without any configuration
     */
    public AccountPersonDao() {
        super(AccountPerson.ACCOUNT_PERSON, com.unchartedpartners.databases.tables.pojos.AccountPerson.class);
    }

    /**
     * Create a new AccountPersonDao with an attached configuration
     */
    public AccountPersonDao(Configuration configuration) {
        super(AccountPerson.ACCOUNT_PERSON, com.unchartedpartners.databases.tables.pojos.AccountPerson.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.AccountPerson object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchById(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.AccountPerson fetchOneById(Long value) {
        return fetchOne(AccountPerson.ACCOUNT_PERSON.ID, value);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByAccountId(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>person_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByPersonId(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.PERSON_ID, values);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByRole(AccountRole... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.ROLE, values);
    }

    /**
     * Fetch records that have <code>occupation IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByOccupation(String... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.OCCUPATION, values);
    }

    /**
     * Fetch records that have <code>occupation_class IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByOccupationClass(OccupationClass... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.OCCUPATION_CLASS, values);
    }

    /**
     * Fetch records that have <code>dependent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByDependent(Dependent... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.DEPENDENT, values);
    }

    /**
     * Fetch records that have <code>date_of_employment IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByDateOfEmployment(Timestamp... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.DATE_OF_EMPLOYMENT, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByVersion(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.VERSION, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByDeleted(Boolean... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByCreatedBy(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByCreated(Timestamp... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByUpdatedBy(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByUpdated(Timestamp... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByTxId(String... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByAuditId(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.AUDIT_ID, values);
    }

    /**
     * Fetch records that have <code>no_of_dependent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByNoOfDependent(Long... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.NO_OF_DEPENDENT, values);
    }

    /**
     * Fetch records that have <code>dependent_id_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByDependentIdNo(String... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.DEPENDENT_ID_NO, values);
    }

    /**
     * Fetch records that have <code>ga_last_update IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByGaLastUpdate(Timestamp... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.GA_LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>termination_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.AccountPerson> fetchByTerminationDate(Timestamp... values) {
        return fetch(AccountPerson.ACCOUNT_PERSON.TERMINATION_DATE, values);
    }
}
