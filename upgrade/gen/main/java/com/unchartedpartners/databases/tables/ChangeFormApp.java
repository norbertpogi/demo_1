/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.enums.ChangeFormAppType;
import com.unchartedpartners.databases.tables.records.ChangeFormAppRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangeFormApp extends TableImpl<ChangeFormAppRecord> {

    private static final long serialVersionUID = -171439894;

    /**
     * The reference instance of <code>intest.change_form_app</code>
     */
    public static final ChangeFormApp CHANGE_FORM_APP = new ChangeFormApp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChangeFormAppRecord> getRecordType() {
        return ChangeFormAppRecord.class;
    }

    /**
     * The column <code>intest.change_form_app.id</code>.
     */
    public final TableField<ChangeFormAppRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('intest.change_form_app_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>intest.change_form_app.account_id</code>.
     */
    public final TableField<ChangeFormAppRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.id_no</code>.
     */
    public final TableField<ChangeFormAppRecord, String> ID_NO = createField("id_no", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.type</code>.
     */
    public final TableField<ChangeFormAppRecord, ChangeFormAppType> TYPE = createField("type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.unchartedpartners.databases.enums.ChangeFormAppType.class), this, "");

    /**
     * The column <code>intest.change_form_app.deleted</code>.
     */
    public final TableField<ChangeFormAppRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.created_by</code>.
     */
    public final TableField<ChangeFormAppRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.created</code>.
     */
    public final TableField<ChangeFormAppRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.updated_by</code>.
     */
    public final TableField<ChangeFormAppRecord, Long> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.updated</code>.
     */
    public final TableField<ChangeFormAppRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.tx_id</code>.
     */
    public final TableField<ChangeFormAppRecord, String> TX_ID = createField("tx_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>intest.change_form_app.audit_id</code>.
     */
    public final TableField<ChangeFormAppRecord, Long> AUDIT_ID = createField("audit_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>intest.change_form_app</code> table reference
     */
    public ChangeFormApp() {
        this(DSL.name("change_form_app"), null);
    }

    /**
     * Create an aliased <code>intest.change_form_app</code> table reference
     */
    public ChangeFormApp(String alias) {
        this(DSL.name(alias), CHANGE_FORM_APP);
    }

    /**
     * Create an aliased <code>intest.change_form_app</code> table reference
     */
    public ChangeFormApp(Name alias) {
        this(alias, CHANGE_FORM_APP);
    }

    private ChangeFormApp(Name alias, Table<ChangeFormAppRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChangeFormApp(Name alias, Table<ChangeFormAppRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHANGE_FORM_APP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ChangeFormAppRecord, Long> getIdentity() {
        return Keys.IDENTITY_CHANGE_FORM_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChangeFormAppRecord> getPrimaryKey() {
        return Keys.CHANGE_FORM_APP_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChangeFormAppRecord>> getKeys() {
        return Arrays.<UniqueKey<ChangeFormAppRecord>>asList(Keys.CHANGE_FORM_APP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangeFormApp as(String alias) {
        return new ChangeFormApp(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangeFormApp as(Name alias) {
        return new ChangeFormApp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChangeFormApp rename(String name) {
        return new ChangeFormApp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChangeFormApp rename(Name name) {
        return new ChangeFormApp(name, null);
    }
}
