/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.ClaimType;
import com.unchartedpartners.databases.tables.DocumentArchive;
import com.unchartedpartners.databases.tables.records.DocumentArchiveRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseDocumentArchiveDao")
@ConditionalOnMissingBean(name="documentArchiveDao")
public class DocumentArchiveDao extends BaseDaoImpl<DocumentArchiveRecord, com.unchartedpartners.databases.tables.pojos.DocumentArchive, Long> {

    /**
     * Create a new DocumentArchiveDao without any configuration
     */
    public DocumentArchiveDao() {
        super(DocumentArchive.DOCUMENT_ARCHIVE, com.unchartedpartners.databases.tables.pojos.DocumentArchive.class);
    }

    /**
     * Create a new DocumentArchiveDao with an attached configuration
     */
    public DocumentArchiveDao(Configuration configuration) {
        super(DocumentArchive.DOCUMENT_ARCHIVE, com.unchartedpartners.databases.tables.pojos.DocumentArchive.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.DocumentArchive object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchById(Long... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.DocumentArchive fetchOneById(Long value) {
        return fetchOne(DocumentArchive.DOCUMENT_ARCHIVE.ID, value);
    }

    /**
     * Fetch records that have <code>data_file_ids IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByDataFileIds(String... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.DATA_FILE_IDS, values);
    }

    /**
     * Fetch records that have <code>policy_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByPolicyNo(String... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.POLICY_NO, values);
    }

    /**
     * Fetch records that have <code>reference_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByReferenceNo(String... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.REFERENCE_NO, values);
    }

    /**
     * Fetch records that have <code>is_resubmit IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByIsResubmit(Boolean... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.IS_RESUBMIT, values);
    }

    /**
     * Fetch records that have <code>member_nric IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByMemberNric(String... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.MEMBER_NRIC, values);
    }

    /**
     * Fetch records that have <code>claim_type IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByClaimType(ClaimType... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.CLAIM_TYPE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByDeleted(Boolean... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByCreatedBy(Long... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.DocumentArchive> fetchByCreated(Timestamp... values) {
        return fetch(DocumentArchive.DOCUMENT_ARCHIVE.CREATED, values);
    }
}
