/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.records;


import com.unchartedpartners.databases.enums.PersonType;
import com.unchartedpartners.databases.enums.UnderwritingStatus;
import com.unchartedpartners.databases.tables.EnrolmentMember;

import java.sql.Timestamp;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnrolmentMemberRecord extends UpdatableRecordImpl<EnrolmentMemberRecord> implements Record11<Long, Long, Long, PersonType, Map, Boolean, Long, Timestamp, Long, Timestamp, UnderwritingStatus> {

    private static final long serialVersionUID = -1167119046;

    /**
     * Setter for <code>intest.enrolment_member.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>intest.enrolment_member.enrolment_id</code>.
     */
    public void setEnrolmentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.enrolment_id</code>.
     */
    public Long getEnrolmentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>intest.enrolment_member.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>intest.enrolment_member.person_type</code>.
     */
    public void setPersonType(PersonType value) {
        set(3, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.person_type</code>.
     */
    public PersonType getPersonType() {
        return (PersonType) get(3);
    }

    /**
     * Setter for <code>intest.enrolment_member.coverage</code>.
     */
    public void setCoverage(Map value) {
        set(4, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.coverage</code>.
     */
    public Map getCoverage() {
        return (Map) get(4);
    }

    /**
     * Setter for <code>intest.enrolment_member.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>intest.enrolment_member.created_by</code>.
     */
    public void setCreatedBy(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.created_by</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>intest.enrolment_member.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>intest.enrolment_member.updated_by</code>.
     */
    public void setUpdatedBy(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.updated_by</code>.
     */
    public Long getUpdatedBy() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>intest.enrolment_member.updated</code>.
     */
    public void setUpdated(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.updated</code>.
     */
    public Timestamp getUpdated() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>intest.enrolment_member.underwriting_status</code>.
     */
    public void setUnderwritingStatus(UnderwritingStatus value) {
        set(10, value);
    }

    /**
     * Getter for <code>intest.enrolment_member.underwriting_status</code>.
     */
    public UnderwritingStatus getUnderwritingStatus() {
        return (UnderwritingStatus) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, Long, PersonType, Map, Boolean, Long, Timestamp, Long, Timestamp, UnderwritingStatus> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, Long, PersonType, Map, Boolean, Long, Timestamp, Long, Timestamp, UnderwritingStatus> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return EnrolmentMember.ENROLMENT_MEMBER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return EnrolmentMember.ENROLMENT_MEMBER.ENROLMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return EnrolmentMember.ENROLMENT_MEMBER.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<PersonType> field4() {
        return EnrolmentMember.ENROLMENT_MEMBER.PERSON_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Map> field5() {
        return EnrolmentMember.ENROLMENT_MEMBER.COVERAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return EnrolmentMember.ENROLMENT_MEMBER.DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return EnrolmentMember.ENROLMENT_MEMBER.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return EnrolmentMember.ENROLMENT_MEMBER.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return EnrolmentMember.ENROLMENT_MEMBER.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return EnrolmentMember.ENROLMENT_MEMBER.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UnderwritingStatus> field11() {
        return EnrolmentMember.ENROLMENT_MEMBER.UNDERWRITING_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getEnrolmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonType component4() {
        return getPersonType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Map component5() {
        return getCoverage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnderwritingStatus component11() {
        return getUnderwritingStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getEnrolmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonType value4() {
        return getPersonType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Map value5() {
        return getCoverage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnderwritingStatus value11() {
        return getUnderwritingStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value2(Long value) {
        setEnrolmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value3(Long value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value4(PersonType value) {
        setPersonType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value5(Map value) {
        setCoverage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value6(Boolean value) {
        setDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value7(Long value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value8(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value9(Long value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value10(Timestamp value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord value11(UnderwritingStatus value) {
        setUnderwritingStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnrolmentMemberRecord values(Long value1, Long value2, Long value3, PersonType value4, Map value5, Boolean value6, Long value7, Timestamp value8, Long value9, Timestamp value10, UnderwritingStatus value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EnrolmentMemberRecord
     */
    public EnrolmentMemberRecord() {
        super(EnrolmentMember.ENROLMENT_MEMBER);
    }

    /**
     * Create a detached, initialised EnrolmentMemberRecord
     */
    public EnrolmentMemberRecord(Long id, Long enrolmentId, Long personId, PersonType personType, Map coverage, Boolean deleted, Long createdBy, Timestamp created, Long updatedBy, Timestamp updated, UnderwritingStatus underwritingStatus) {
        super(EnrolmentMember.ENROLMENT_MEMBER);

        set(0, id);
        set(1, enrolmentId);
        set(2, personId);
        set(3, personType);
        set(4, coverage);
        set(5, deleted);
        set(6, createdBy);
        set(7, created);
        set(8, updatedBy);
        set(9, updated);
        set(10, underwritingStatus);
    }
}
