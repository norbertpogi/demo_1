/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables;


import com.unchartedpartners.databases.Indexes;
import com.unchartedpartners.databases.Intest;
import com.unchartedpartners.databases.Keys;
import com.unchartedpartners.databases.tables.records.QuoteCompanyContactRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuoteCompanyContact extends TableImpl<QuoteCompanyContactRecord> {

    private static final long serialVersionUID = -1005167332;

    /**
     * The reference instance of <code>intest.quote_company_contact</code>
     */
    public static final QuoteCompanyContact QUOTE_COMPANY_CONTACT = new QuoteCompanyContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuoteCompanyContactRecord> getRecordType() {
        return QuoteCompanyContactRecord.class;
    }

    /**
     * The column <code>intest.quote_company_contact.quote_id</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Long> QUOTE_ID = createField("quote_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.company_id</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Long> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.company_contact_id</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Long> COMPANY_CONTACT_ID = createField("company_contact_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.deleted</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.created_by</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Long> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.created</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.updated_by</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Long> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.updated</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.tx_id</code>.
     */
    public final TableField<QuoteCompanyContactRecord, String> TX_ID = createField("tx_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>intest.quote_company_contact.audit_id</code>.
     */
    public final TableField<QuoteCompanyContactRecord, Long> AUDIT_ID = createField("audit_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>intest.quote_company_contact</code> table reference
     */
    public QuoteCompanyContact() {
        this(DSL.name("quote_company_contact"), null);
    }

    /**
     * Create an aliased <code>intest.quote_company_contact</code> table reference
     */
    public QuoteCompanyContact(String alias) {
        this(DSL.name(alias), QUOTE_COMPANY_CONTACT);
    }

    /**
     * Create an aliased <code>intest.quote_company_contact</code> table reference
     */
    public QuoteCompanyContact(Name alias) {
        this(alias, QUOTE_COMPANY_CONTACT);
    }

    private QuoteCompanyContact(Name alias, Table<QuoteCompanyContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuoteCompanyContact(Name alias, Table<QuoteCompanyContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Intest.INTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QUOTE_COMPANY_CONTACT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuoteCompanyContactRecord> getPrimaryKey() {
        return Keys.QUOTE_COMPANY_CONTACT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuoteCompanyContactRecord>> getKeys() {
        return Arrays.<UniqueKey<QuoteCompanyContactRecord>>asList(Keys.QUOTE_COMPANY_CONTACT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QuoteCompanyContactRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuoteCompanyContactRecord, ?>>asList(Keys.QUOTE_COMPANY_CONTACT__QUOTE_COMPANY_CONTACT_QUOTE_ID_FKEY, Keys.QUOTE_COMPANY_CONTACT__QUOTE_COMPANY_CONTACT_COMPANY_ID_FKEY, Keys.QUOTE_COMPANY_CONTACT__QUOTE_COMPANY_CONTACT_COMPANY_CONTACT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuoteCompanyContact as(String alias) {
        return new QuoteCompanyContact(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuoteCompanyContact as(Name alias) {
        return new QuoteCompanyContact(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuoteCompanyContact rename(String name) {
        return new QuoteCompanyContact(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QuoteCompanyContact rename(Name name) {
        return new QuoteCompanyContact(name, null);
    }
}
