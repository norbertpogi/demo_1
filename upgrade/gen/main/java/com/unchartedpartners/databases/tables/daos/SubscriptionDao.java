/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.SubscriptionStatus;
import com.unchartedpartners.databases.tables.Subscription;
import com.unchartedpartners.databases.tables.records.SubscriptionRecord;

import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseSubscriptionDao")
@ConditionalOnMissingBean(name="subscriptionDao")
public class SubscriptionDao extends BaseDaoImpl<SubscriptionRecord, com.unchartedpartners.databases.tables.pojos.Subscription, Long> {

    /**
     * Create a new SubscriptionDao without any configuration
     */
    public SubscriptionDao() {
        super(Subscription.SUBSCRIPTION, com.unchartedpartners.databases.tables.pojos.Subscription.class);
    }

    /**
     * Create a new SubscriptionDao with an attached configuration
     */
    public SubscriptionDao(Configuration configuration) {
        super(Subscription.SUBSCRIPTION, com.unchartedpartners.databases.tables.pojos.Subscription.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.Subscription object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchById(Long... values) {
        return fetch(Subscription.SUBSCRIPTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.Subscription fetchOneById(Long value) {
        return fetchOne(Subscription.SUBSCRIPTION.ID, value);
    }

    /**
     * Fetch records that have <code>quotation_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByQuotationNo(String... values) {
        return fetch(Subscription.SUBSCRIPTION.QUOTATION_NO, values);
    }

    /**
     * Fetch records that have <code>contract_code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByContractCode(String... values) {
        return fetch(Subscription.SUBSCRIPTION.CONTRACT_CODE, values);
    }

    /**
     * Fetch records that have <code>contract_ref_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByContractRefNo(String... values) {
        return fetch(Subscription.SUBSCRIPTION.CONTRACT_REF_NO, values);
    }

    /**
     * Fetch records that have <code>certificate_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByCertificateNo(String... values) {
        return fetch(Subscription.SUBSCRIPTION.CERTIFICATE_NO, values);
    }

    /**
     * Fetch records that have <code>customer_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByCustomerNo(String... values) {
        return fetch(Subscription.SUBSCRIPTION.CUSTOMER_NO, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByStatus(SubscriptionStatus... values) {
        return fetch(Subscription.SUBSCRIPTION.STATUS, values);
    }

    /**
     * Fetch records that have <code>issued_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByIssuedDate(Timestamp... values) {
        return fetch(Subscription.SUBSCRIPTION.ISSUED_DATE, values);
    }

    /**
     * Fetch records that have <code>cancellation_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByCancellationDate(Timestamp... values) {
        return fetch(Subscription.SUBSCRIPTION.CANCELLATION_DATE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByDeleted(Boolean... values) {
        return fetch(Subscription.SUBSCRIPTION.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByCreatedBy(Long... values) {
        return fetch(Subscription.SUBSCRIPTION.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByCreated(Timestamp... values) {
        return fetch(Subscription.SUBSCRIPTION.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByUpdatedBy(Long... values) {
        return fetch(Subscription.SUBSCRIPTION.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByUpdated(Timestamp... values) {
        return fetch(Subscription.SUBSCRIPTION.UPDATED, values);
    }

    /**
     * Fetch records that have <code>subscription_data IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchBySubscriptionData(Map... values) {
        return fetch(Subscription.SUBSCRIPTION.SUBSCRIPTION_DATA, values);
    }

    /**
     * Fetch records that have <code>member_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Subscription> fetchByMemberNo(String... values) {
        return fetch(Subscription.SUBSCRIPTION.MEMBER_NO, values);
    }
}
