/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.tables.Clinic;
import com.unchartedpartners.databases.tables.records.ClinicRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseClinicDao")
@ConditionalOnMissingBean(name="clinicDao")
public class ClinicDao extends BaseDaoImpl<ClinicRecord, com.unchartedpartners.databases.tables.pojos.Clinic, Long> {

    /**
     * Create a new ClinicDao without any configuration
     */
    public ClinicDao() {
        super(Clinic.CLINIC, com.unchartedpartners.databases.tables.pojos.Clinic.class);
    }

    /**
     * Create a new ClinicDao with an attached configuration
     */
    public ClinicDao(Configuration configuration) {
        super(Clinic.CLINIC, com.unchartedpartners.databases.tables.pojos.Clinic.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.Clinic object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchById(Long... values) {
        return fetch(Clinic.CLINIC.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.Clinic fetchOneById(Long value) {
        return fetchOne(Clinic.CLINIC.ID, value);
    }

    /**
     * Fetch records that have <code>area IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByArea(String... values) {
        return fetch(Clinic.CLINIC.AREA, values);
    }

    /**
     * Fetch records that have <code>clinic_code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByClinicCode(String... values) {
        return fetch(Clinic.CLINIC.CLINIC_CODE, values);
    }

    /**
     * Fetch records that have <code>clinic_name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByClinicName(String... values) {
        return fetch(Clinic.CLINIC.CLINIC_NAME, values);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByAddress(String... values) {
        return fetch(Clinic.CLINIC.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>postal IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByPostal(String... values) {
        return fetch(Clinic.CLINIC.POSTAL, values);
    }

    /**
     * Fetch records that have <code>tel IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByTel(String... values) {
        return fetch(Clinic.CLINIC.TEL, values);
    }

    /**
     * Fetch records that have <code>fax IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByFax(String... values) {
        return fetch(Clinic.CLINIC.FAX, values);
    }

    /**
     * Fetch records that have <code>operation_hours_mon_fri IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByOperationHoursMonFri(String... values) {
        return fetch(Clinic.CLINIC.OPERATION_HOURS_MON_FRI, values);
    }

    /**
     * Fetch records that have <code>operation_hours_sat IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByOperationHoursSat(String... values) {
        return fetch(Clinic.CLINIC.OPERATION_HOURS_SAT, values);
    }

    /**
     * Fetch records that have <code>operation_hours_sun IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByOperationHoursSun(String... values) {
        return fetch(Clinic.CLINIC.OPERATION_HOURS_SUN, values);
    }

    /**
     * Fetch records that have <code>public_holiday IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByPublicHoliday(String... values) {
        return fetch(Clinic.CLINIC.PUBLIC_HOLIDAY, values);
    }

    /**
     * Fetch records that have <code>remarks IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByRemarks(String... values) {
        return fetch(Clinic.CLINIC.REMARKS, values);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByStartDate(String... values) {
        return fetch(Clinic.CLINIC.START_DATE, values);
    }

    /**
     * Fetch records that have <code>surcharge IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchBySurcharge(String... values) {
        return fetch(Clinic.CLINIC.SURCHARGE, values);
    }

    /**
     * Fetch records that have <code>lat IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByLat(String... values) {
        return fetch(Clinic.CLINIC.LAT, values);
    }

    /**
     * Fetch records that have <code>lng IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByLng(String... values) {
        return fetch(Clinic.CLINIC.LNG, values);
    }

    /**
     * Fetch records that have <code>clinic_group IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Clinic> fetchByClinicGroup(String... values) {
        return fetch(Clinic.CLINIC.CLINIC_GROUP, values);
    }
}
