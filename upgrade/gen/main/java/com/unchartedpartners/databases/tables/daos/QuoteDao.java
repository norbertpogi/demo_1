/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.PaymentStatus;
import com.unchartedpartners.databases.enums.QuoteBusinessType;
import com.unchartedpartners.databases.enums.QuotePaymentMethod;
import com.unchartedpartners.databases.enums.Stages;
import com.unchartedpartners.databases.tables.Quote;
import com.unchartedpartners.databases.tables.records.QuoteRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="baseQuoteDao")
@ConditionalOnMissingBean(name="quoteDao")
public class QuoteDao extends BaseDaoImpl<QuoteRecord, com.unchartedpartners.databases.tables.pojos.Quote, Long> {

    /**
     * Create a new QuoteDao without any configuration
     */
    public QuoteDao() {
        super(Quote.QUOTE, com.unchartedpartners.databases.tables.pojos.Quote.class);
    }

    /**
     * Create a new QuoteDao with an attached configuration
     */
    public QuoteDao(Configuration configuration) {
        super(Quote.QUOTE, com.unchartedpartners.databases.tables.pojos.Quote.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.Quote object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchById(Long... values) {
        return fetch(Quote.QUOTE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.Quote fetchOneById(Long value) {
        return fetchOne(Quote.QUOTE.ID, value);
    }

    /**
     * Fetch records that have <code>quotation_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByQuotationNo(String... values) {
        return fetch(Quote.QUOTE.QUOTATION_NO, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByName(String... values) {
        return fetch(Quote.QUOTE.NAME, values);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByAccountId(Long... values) {
        return fetch(Quote.QUOTE.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>product_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByProductId(Long... values) {
        return fetch(Quote.QUOTE.PRODUCT_ID, values);
    }

    /**
     * Fetch records that have <code>product_code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByProductCode(String... values) {
        return fetch(Quote.QUOTE.PRODUCT_CODE, values);
    }

    /**
     * Fetch records that have <code>product_version IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByProductVersion(Long... values) {
        return fetch(Quote.QUOTE.PRODUCT_VERSION, values);
    }

    /**
     * Fetch records that have <code>stages IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByStages(Stages... values) {
        return fetch(Quote.QUOTE.STAGES, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByDeleted(Boolean... values) {
        return fetch(Quote.QUOTE.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByCreatedBy(Long... values) {
        return fetch(Quote.QUOTE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByCreated(Timestamp... values) {
        return fetch(Quote.QUOTE.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByUpdatedBy(Long... values) {
        return fetch(Quote.QUOTE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByUpdated(Timestamp... values) {
        return fetch(Quote.QUOTE.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByTxId(String... values) {
        return fetch(Quote.QUOTE.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByAuditId(Long... values) {
        return fetch(Quote.QUOTE.AUDIT_ID, values);
    }

    /**
     * Fetch records that have <code>data IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByData(Map... values) {
        return fetch(Quote.QUOTE.DATA, values);
    }

    /**
     * Fetch records that have <code>policy_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPolicyNo(String... values) {
        return fetch(Quote.QUOTE.POLICY_NO, values);
    }

    /**
     * Fetch records that have <code>req_effective_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByReqEffectiveDate(Timestamp... values) {
        return fetch(Quote.QUOTE.REQ_EFFECTIVE_DATE, values);
    }

    /**
     * Fetch records that have <code>policy_effective_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPolicyEffectiveDate(Timestamp... values) {
        return fetch(Quote.QUOTE.POLICY_EFFECTIVE_DATE, values);
    }

    /**
     * Fetch records that have <code>pdpa_consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPdpaConsent(Boolean... values) {
        return fetch(Quote.QUOTE.PDPA_CONSENT, values);
    }

    /**
     * Fetch records that have <code>waiting_period IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByWaitingPeriod(Integer... values) {
        return fetch(Quote.QUOTE.WAITING_PERIOD, values);
    }

    /**
     * Fetch records that have <code>payment_status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPaymentStatus(PaymentStatus... values) {
        return fetch(Quote.QUOTE.PAYMENT_STATUS, values);
    }

    /**
     * Fetch records that have <code>payment_method IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPaymentMethod(QuotePaymentMethod... values) {
        return fetch(Quote.QUOTE.PAYMENT_METHOD, values);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByAmount(BigDecimal... values) {
        return fetch(Quote.QUOTE.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>paid_time IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPaidTime(Timestamp... values) {
        return fetch(Quote.QUOTE.PAID_TIME, values);
    }

    /**
     * Fetch records that have <code>braintree_transaction_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByBraintreeTransactionId(String... values) {
        return fetch(Quote.QUOTE.BRAINTREE_TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>payment_consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPaymentConsent(Boolean... values) {
        return fetch(Quote.QUOTE.PAYMENT_CONSENT, values);
    }

    /**
     * Fetch records that have <code>estimate_amount IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByEstimateAmount(BigDecimal... values) {
        return fetch(Quote.QUOTE.ESTIMATE_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>proposed_amount IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByProposedAmount(BigDecimal... values) {
        return fetch(Quote.QUOTE.PROPOSED_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>submission_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchBySubmissionDate(Timestamp... values) {
        return fetch(Quote.QUOTE.SUBMISSION_DATE, values);
    }

    /**
     * Fetch records that have <code>inforce_date IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByInforceDate(Timestamp... values) {
        return fetch(Quote.QUOTE.INFORCE_DATE, values);
    }

    /**
     * Fetch records that have <code>ext_trans_type IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByExtTransType(String... values) {
        return fetch(Quote.QUOTE.EXT_TRANS_TYPE, values);
    }

    /**
     * Fetch records that have <code>ext_trans_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByExtTransId(String... values) {
        return fetch(Quote.QUOTE.EXT_TRANS_ID, values);
    }

    /**
     * Fetch records that have <code>scid IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByScid(String... values) {
        return fetch(Quote.QUOTE.SCID, values);
    }

    /**
     * Fetch records that have <code>business_type IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByBusinessType(QuoteBusinessType... values) {
        return fetch(Quote.QUOTE.BUSINESS_TYPE, values);
    }

    /**
     * Fetch records that have <code>existing_policy_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByExistingPolicyNo(String... values) {
        return fetch(Quote.QUOTE.EXISTING_POLICY_NO, values);
    }

    /**
     * Fetch records that have <code>final_amount IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByFinalAmount(BigDecimal... values) {
        return fetch(Quote.QUOTE.FINAL_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>promo_code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Quote> fetchByPromoCode(String... values) {
        return fetch(Quote.QUOTE.PROMO_CODE, values);
    }
}
