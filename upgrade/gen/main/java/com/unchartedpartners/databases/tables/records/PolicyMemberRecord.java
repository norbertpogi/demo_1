/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.records;


import com.unchartedpartners.databases.enums.PolicyMemberBatchTask;
import com.unchartedpartners.databases.enums.PolicyMemberStatus;
import com.unchartedpartners.databases.enums.PolicyMemberType;
import com.unchartedpartners.databases.enums.UnderwritingStatus;
import com.unchartedpartners.databases.tables.PolicyMember;

import java.sql.Timestamp;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record18;
import org.jooq.Record2;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyMemberRecord extends UpdatableRecordImpl<PolicyMemberRecord> implements Record18<Long, Long, Map, PolicyMemberType, PolicyMemberStatus, PolicyMemberBatchTask, Timestamp, Boolean, Long, Timestamp, Long, Timestamp, String, Long, Timestamp, Timestamp, Timestamp, UnderwritingStatus> {

    private static final long serialVersionUID = 1971548658;

    /**
     * Setter for <code>intest.policy_member.policy_id</code>.
     */
    public void setPolicyId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>intest.policy_member.policy_id</code>.
     */
    public Long getPolicyId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>intest.policy_member.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>intest.policy_member.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>intest.policy_member.data</code>.
     */
    public void setData(Map value) {
        set(2, value);
    }

    /**
     * Getter for <code>intest.policy_member.data</code>.
     */
    public Map getData() {
        return (Map) get(2);
    }

    /**
     * Setter for <code>intest.policy_member.type</code>.
     */
    public void setType(PolicyMemberType value) {
        set(3, value);
    }

    /**
     * Getter for <code>intest.policy_member.type</code>.
     */
    public PolicyMemberType getType() {
        return (PolicyMemberType) get(3);
    }

    /**
     * Setter for <code>intest.policy_member.status</code>.
     */
    public void setStatus(PolicyMemberStatus value) {
        set(4, value);
    }

    /**
     * Getter for <code>intest.policy_member.status</code>.
     */
    public PolicyMemberStatus getStatus() {
        return (PolicyMemberStatus) get(4);
    }

    /**
     * Setter for <code>intest.policy_member.task</code>.
     */
    public void setTask(PolicyMemberBatchTask value) {
        set(5, value);
    }

    /**
     * Getter for <code>intest.policy_member.task</code>.
     */
    public PolicyMemberBatchTask getTask() {
        return (PolicyMemberBatchTask) get(5);
    }

    /**
     * Setter for <code>intest.policy_member.activation_date</code>.
     */
    public void setActivationDate(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>intest.policy_member.activation_date</code>.
     */
    public Timestamp getActivationDate() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>intest.policy_member.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>intest.policy_member.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>intest.policy_member.created_by</code>.
     */
    public void setCreatedBy(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>intest.policy_member.created_by</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>intest.policy_member.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>intest.policy_member.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>intest.policy_member.updated_by</code>.
     */
    public void setUpdatedBy(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>intest.policy_member.updated_by</code>.
     */
    public Long getUpdatedBy() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>intest.policy_member.updated</code>.
     */
    public void setUpdated(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>intest.policy_member.updated</code>.
     */
    public Timestamp getUpdated() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>intest.policy_member.tx_id</code>.
     */
    public void setTxId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>intest.policy_member.tx_id</code>.
     */
    public String getTxId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>intest.policy_member.audit_id</code>.
     */
    public void setAuditId(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>intest.policy_member.audit_id</code>.
     */
    public Long getAuditId() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>intest.policy_member.coverage_start_date</code>.
     */
    public void setCoverageStartDate(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>intest.policy_member.coverage_start_date</code>.
     */
    public Timestamp getCoverageStartDate() {
        return (Timestamp) get(14);
    }

    /**
     * Setter for <code>intest.policy_member.ga_last_update</code>.
     */
    public void setGaLastUpdate(Timestamp value) {
        set(15, value);
    }

    /**
     * Getter for <code>intest.policy_member.ga_last_update</code>.
     */
    public Timestamp getGaLastUpdate() {
        return (Timestamp) get(15);
    }

    /**
     * Setter for <code>intest.policy_member.termination_date</code>.
     */
    public void setTerminationDate(Timestamp value) {
        set(16, value);
    }

    /**
     * Getter for <code>intest.policy_member.termination_date</code>.
     */
    public Timestamp getTerminationDate() {
        return (Timestamp) get(16);
    }

    /**
     * Setter for <code>intest.policy_member.underwriting_status</code>.
     */
    public void setUnderwritingStatus(UnderwritingStatus value) {
        set(17, value);
    }

    /**
     * Getter for <code>intest.policy_member.underwriting_status</code>.
     */
    public UnderwritingStatus getUnderwritingStatus() {
        return (UnderwritingStatus) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Long, Long, Map, PolicyMemberType, PolicyMemberStatus, PolicyMemberBatchTask, Timestamp, Boolean, Long, Timestamp, Long, Timestamp, String, Long, Timestamp, Timestamp, Timestamp, UnderwritingStatus> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row18<Long, Long, Map, PolicyMemberType, PolicyMemberStatus, PolicyMemberBatchTask, Timestamp, Boolean, Long, Timestamp, Long, Timestamp, String, Long, Timestamp, Timestamp, Timestamp, UnderwritingStatus> valuesRow() {
        return (Row18) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PolicyMember.POLICY_MEMBER.POLICY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return PolicyMember.POLICY_MEMBER.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Map> field3() {
        return PolicyMember.POLICY_MEMBER.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<PolicyMemberType> field4() {
        return PolicyMember.POLICY_MEMBER.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<PolicyMemberStatus> field5() {
        return PolicyMember.POLICY_MEMBER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<PolicyMemberBatchTask> field6() {
        return PolicyMember.POLICY_MEMBER.TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return PolicyMember.POLICY_MEMBER.ACTIVATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return PolicyMember.POLICY_MEMBER.DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return PolicyMember.POLICY_MEMBER.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return PolicyMember.POLICY_MEMBER.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return PolicyMember.POLICY_MEMBER.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return PolicyMember.POLICY_MEMBER.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return PolicyMember.POLICY_MEMBER.TX_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field14() {
        return PolicyMember.POLICY_MEMBER.AUDIT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return PolicyMember.POLICY_MEMBER.COVERAGE_START_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field16() {
        return PolicyMember.POLICY_MEMBER.GA_LAST_UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field17() {
        return PolicyMember.POLICY_MEMBER.TERMINATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UnderwritingStatus> field18() {
        return PolicyMember.POLICY_MEMBER.UNDERWRITING_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPolicyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Map component3() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberType component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberStatus component5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberBatchTask component6() {
        return getTask();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getActivationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getTxId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component14() {
        return getAuditId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getCoverageStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component16() {
        return getGaLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component17() {
        return getTerminationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnderwritingStatus component18() {
        return getUnderwritingStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPolicyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Map value3() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberType value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberStatus value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberBatchTask value6() {
        return getTask();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getActivationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getTxId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value14() {
        return getAuditId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getCoverageStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value16() {
        return getGaLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value17() {
        return getTerminationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UnderwritingStatus value18() {
        return getUnderwritingStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value1(Long value) {
        setPolicyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value2(Long value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value3(Map value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value4(PolicyMemberType value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value5(PolicyMemberStatus value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value6(PolicyMemberBatchTask value) {
        setTask(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value7(Timestamp value) {
        setActivationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value8(Boolean value) {
        setDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value9(Long value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value10(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value11(Long value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value12(Timestamp value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value13(String value) {
        setTxId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value14(Long value) {
        setAuditId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value15(Timestamp value) {
        setCoverageStartDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value16(Timestamp value) {
        setGaLastUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value17(Timestamp value) {
        setTerminationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord value18(UnderwritingStatus value) {
        setUnderwritingStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PolicyMemberRecord values(Long value1, Long value2, Map value3, PolicyMemberType value4, PolicyMemberStatus value5, PolicyMemberBatchTask value6, Timestamp value7, Boolean value8, Long value9, Timestamp value10, Long value11, Timestamp value12, String value13, Long value14, Timestamp value15, Timestamp value16, Timestamp value17, UnderwritingStatus value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PolicyMemberRecord
     */
    public PolicyMemberRecord() {
        super(PolicyMember.POLICY_MEMBER);
    }

    /**
     * Create a detached, initialised PolicyMemberRecord
     */
    public PolicyMemberRecord(Long policyId, Long personId, Map data, PolicyMemberType type, PolicyMemberStatus status, PolicyMemberBatchTask task, Timestamp activationDate, Boolean deleted, Long createdBy, Timestamp created, Long updatedBy, Timestamp updated, String txId, Long auditId, Timestamp coverageStartDate, Timestamp gaLastUpdate, Timestamp terminationDate, UnderwritingStatus underwritingStatus) {
        super(PolicyMember.POLICY_MEMBER);

        set(0, policyId);
        set(1, personId);
        set(2, data);
        set(3, type);
        set(4, status);
        set(5, task);
        set(6, activationDate);
        set(7, deleted);
        set(8, createdBy);
        set(9, created);
        set(10, updatedBy);
        set(11, updated);
        set(12, txId);
        set(13, auditId);
        set(14, coverageStartDate);
        set(15, gaLastUpdate);
        set(16, terminationDate);
        set(17, underwritingStatus);
    }
}
