/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.tables.PersonTc;
import com.unchartedpartners.databases.tables.records.PersonTcRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="basePersonTcDao")
@ConditionalOnMissingBean(name="personTcDao")
public class PersonTcDao extends BaseDaoImpl<PersonTcRecord, com.unchartedpartners.databases.tables.pojos.PersonTc, Long> {

    /**
     * Create a new PersonTcDao without any configuration
     */
    public PersonTcDao() {
        super(PersonTc.PERSON_TC, com.unchartedpartners.databases.tables.pojos.PersonTc.class);
    }

    /**
     * Create a new PersonTcDao with an attached configuration
     */
    public PersonTcDao(Configuration configuration) {
        super(PersonTc.PERSON_TC, com.unchartedpartners.databases.tables.pojos.PersonTc.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.PersonTc object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchById(Long... values) {
        return fetch(PersonTc.PERSON_TC.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.PersonTc fetchOneById(Long value) {
        return fetchOne(PersonTc.PERSON_TC.ID, value);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByDeleted(Boolean... values) {
        return fetch(PersonTc.PERSON_TC.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByCreatedBy(Long... values) {
        return fetch(PersonTc.PERSON_TC.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByCreated(Timestamp... values) {
        return fetch(PersonTc.PERSON_TC.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByUpdatedBy(Long... values) {
        return fetch(PersonTc.PERSON_TC.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByUpdated(Timestamp... values) {
        return fetch(PersonTc.PERSON_TC.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByTxId(String... values) {
        return fetch(PersonTc.PERSON_TC.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByAuditId(Long... values) {
        return fetch(PersonTc.PERSON_TC.AUDIT_ID, values);
    }

    /**
     * Fetch records that have <code>person_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByPersonId(Long... values) {
        return fetch(PersonTc.PERSON_TC.PERSON_ID, values);
    }

    /**
     * Fetch records that have <code>marketing_consent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.PersonTc> fetchByMarketingConsent(Boolean... values) {
        return fetch(PersonTc.PERSON_TC.MARKETING_CONSENT, values);
    }
}
