/*
 * This file is generated by jOOQ.
*/
package com.unchartedpartners.databases.tables.daos;


import com.unchartedpartners.dao.BaseDaoImpl;
import com.unchartedpartners.databases.enums.Dependent;
import com.unchartedpartners.databases.enums.Gender;
import com.unchartedpartners.databases.enums.OccupationClass;
import com.unchartedpartners.databases.enums.PersonStatus;
import com.unchartedpartners.databases.tables.Person;
import com.unchartedpartners.databases.tables.records.PersonRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository(value="basePersonDao")
@ConditionalOnMissingBean(name="personDao")
public class PersonDao extends BaseDaoImpl<PersonRecord, com.unchartedpartners.databases.tables.pojos.Person, Long> {

    /**
     * Create a new PersonDao without any configuration
     */
    public PersonDao() {
        super(Person.PERSON, com.unchartedpartners.databases.tables.pojos.Person.class);
    }

    /**
     * Create a new PersonDao with an attached configuration
     */
    public PersonDao(Configuration configuration) {
        super(Person.PERSON, com.unchartedpartners.databases.tables.pojos.Person.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.unchartedpartners.databases.tables.pojos.Person object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchById(Long... values) {
        return fetch(Person.PERSON.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.Person fetchOneById(Long value) {
        return fetchOne(Person.PERSON.ID, value);
    }

    /**
     * Fetch records that have <code>id_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByIdNo(String... values) {
        return fetch(Person.PERSON.ID_NO, values);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByFirstName(String... values) {
        return fetch(Person.PERSON.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByLastName(String... values) {
        return fetch(Person.PERSON.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>dob IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByDob(Timestamp... values) {
        return fetch(Person.PERSON.DOB, values);
    }

    /**
     * Fetch records that have <code>marital_status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByMaritalStatus(String... values) {
        return fetch(Person.PERSON.MARITAL_STATUS, values);
    }

    /**
     * Fetch records that have <code>nationality IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByNationality(String... values) {
        return fetch(Person.PERSON.NATIONALITY, values);
    }

    /**
     * Fetch records that have <code>country_of_residence IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByCountryOfResidence(String... values) {
        return fetch(Person.PERSON.COUNTRY_OF_RESIDENCE, values);
    }

    /**
     * Fetch records that have <code>date_of_employment IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByDateOfEmployment(Timestamp... values) {
        return fetch(Person.PERSON.DATE_OF_EMPLOYMENT, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByEmail(String... values) {
        return fetch(Person.PERSON.EMAIL, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByDeleted(Boolean... values) {
        return fetch(Person.PERSON.DELETED, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByCreatedBy(Long... values) {
        return fetch(Person.PERSON.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByCreated(Timestamp... values) {
        return fetch(Person.PERSON.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByUpdatedBy(Long... values) {
        return fetch(Person.PERSON.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByUpdated(Timestamp... values) {
        return fetch(Person.PERSON.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tx_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByTxId(String... values) {
        return fetch(Person.PERSON.TX_ID, values);
    }

    /**
     * Fetch records that have <code>audit_id IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByAuditId(Long... values) {
        return fetch(Person.PERSON.AUDIT_ID, values);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByGender(Gender... values) {
        return fetch(Person.PERSON.GENDER, values);
    }

    /**
     * Fetch records that have <code>dependent IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByDependent(Dependent... values) {
        return fetch(Person.PERSON.DEPENDENT, values);
    }

    /**
     * Fetch records that have <code>occupation_class IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByOccupationClass(OccupationClass... values) {
        return fetch(Person.PERSON.OCCUPATION_CLASS, values);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByUsername(String... values) {
        return fetch(Person.PERSON.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.unchartedpartners.databases.tables.pojos.Person fetchOneByUsername(String value) {
        return fetchOne(Person.PERSON.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByPassword(String... values) {
        return fetch(Person.PERSON.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByStatus(PersonStatus... values) {
        return fetch(Person.PERSON.STATUS, values);
    }

    /**
     * Fetch records that have <code>last_login_time IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByLastLoginTime(Timestamp... values) {
        return fetch(Person.PERSON.LAST_LOGIN_TIME, values);
    }

    /**
     * Fetch records that have <code>foreign_worker IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByForeignWorker(Boolean... values) {
        return fetch(Person.PERSON.FOREIGN_WORKER, values);
    }

    /**
     * Fetch records that have <code>contact_no IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByContactNo(String... values) {
        return fetch(Person.PERSON.CONTACT_NO, values);
    }

    /**
     * Fetch records that have <code>otp IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByOtp(String... values) {
        return fetch(Person.PERSON.OTP, values);
    }

    /**
     * Fetch records that have <code>otp_expiry_time IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByOtpExpiryTime(Timestamp... values) {
        return fetch(Person.PERSON.OTP_EXPIRY_TIME, values);
    }

    /**
     * Fetch records that have <code>full_name IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByFullName(String... values) {
        return fetch(Person.PERSON.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByCode(String... values) {
        return fetch(Person.PERSON.CODE, values);
    }

    /**
     * Fetch records that have <code>height IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByHeight(BigDecimal... values) {
        return fetch(Person.PERSON.HEIGHT, values);
    }

    /**
     * Fetch records that have <code>weight IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByWeight(BigDecimal... values) {
        return fetch(Person.PERSON.WEIGHT, values);
    }

    /**
     * Fetch records that have <code>bmi IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByBmi(BigDecimal... values) {
        return fetch(Person.PERSON.BMI, values);
    }

    /**
     * Fetch records that have <code>occupation IN (values)</code>
     */
    public List<com.unchartedpartners.databases.tables.pojos.Person> fetchByOccupation(String... values) {
        return fetch(Person.PERSON.OCCUPATION, values);
    }
}
