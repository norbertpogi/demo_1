plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'compile.spring.securityUpgrade'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation fileTree(dir: 'ext-libs', include: 'jooq-3.10.5.jar')
	implementation fileTree(dir: 'ext-libs', include: 'jooq-codegen-3.10.5.jar')
	implementation fileTree(dir: 'ext-libs', include: 'jooq-meta-3.10.5.jar')

	implementation group: 'org.springframework.boot', name: 'spring-boot-properties-migrator', version: '2.0.3.RELEASE'
	//runtime("org.springframework.boot:spring-boot-properties-migrator")
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.6.1'
	implementation group: 'org.springframework', name: 'spring-web', version: '5.3.19'
	implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.18'
	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.6.2'
	//implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.1.6.RELEASE'
	implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.6.1'

//	implementation group: 'org.jooq', name: 'jooq-codegen-maven', version: '3.10.5'


	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '25.1-jre'
}
//jacocoTestReport {
//	reports {
//		csv.enabled = false
//		xml.enabled = false
//		html.enabled = true
//	}
//	afterEvaluate { // (optional) : to exclude classes / packages from coverage
//		classDirectories.from = files(classDirectories.files.collect {
//			fileTree(
//					dir: it,
//					exclude: [ 'snmaddula/sboot/crud/App.class', 'snmaddula/sboot/util/**' ])
//		})
//	}
//}

//tasks.named('test') {
//	useJUnitPlatform()
//}
